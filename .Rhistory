rename("p value" = "Pr(>Chisq)")
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)")
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Count = ifelse(model == "sibsYN.model", "CDI", NA),
Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
Data = ifelse(grepl("video", model), "Video", NA),
Data = ifelse(grepl("audio", model), "Audio", Data),
Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Count, Model, Data, Df, Chisq, `p value`)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
anova(sibnumber.model, sibnumber.model.null)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
# Checking consistency with words produced in recordings
# Tokens - video
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.tokens_anova_video <- anova(sibsYN.model.tokens_video, sibsYN.model.tokens_video.null) # NS
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.tokens_anova_video <- anova(sibgroup.model.tokens_video, sibgroup.model.tokens_video.null) # NS
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.tokens_anova_video <- anova(sibnumber.model.tokens_video, sibnumber.model.tokens_video.null) # NS
# Types - video
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.types_video <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.types_anova_video <- anova(sibsYN.model.types_video, sibsYN.model.types_video.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.types_video <- lmerTest::lmer(Log.types_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.types_anova_video <- anova(sibgroup.model.types_video, sibgroup.model.types_video.null) # p<.001
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.types_video <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.types_anova_video <- anova(sibnumber.model.types_video, sibnumber.model.types_video.null) # NS
# Tokens - audio
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.tokens_anova_audio <- anova(sibsYN.model.tokens_audio, sibsYN.model.tokens_audio.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.tokens_anova_audio <- anova(sibgroup.model.tokens_audio, sibgroup.model.tokens_audio.null) # NS
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.tokens_anova_audio <- anova(sibnumber.model.tokens_audio, sibnumber.model.tokens_audio.null) # p=.05
# Types - audio
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.types_anova_audio <- anova(sibsYN.model.types_audio, sibsYN.model.types_audio.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Count = ifelse(model == "sibsYN.model", "CDI", NA),
Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
Data = ifelse(grepl("video", model), "Video", NA),
Data = ifelse(grepl("audio", model), "Audio", Data),
Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Count, Model, Data, Df, Chisq, `p value`)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Count = ifelse(model == "sibsYN.model", "CDI", NA),
Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
Data = ifelse(grepl("video", model), "Video", NA),
Data = ifelse(grepl("audio", model), "Audio", Data),
Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Count, Model, Data, Df, Chisq, `p value`)
View(table.sibling.model.output)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_anova
anova(sibsYN.model, sibsYN.model.null)
View(SiblingsData)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
other.speaker.data <-
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other),
PC.other.sd = sd(prop.other))
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
# age
age.test.cdi <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi.null <- lmer(Log.Totalwords ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi_anova <- anova(age.test.cdi, age.test.cdi.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
age.test_df <- age.test.cdi_anova$`Chi Df`[2]
age.test_chisq <- age.test.cdi_anova$Chisq[2]
age.test_p.value <- age.test.cdi_anova$pval[2]
age.test.video.tokens <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.video.tokens.null <- lmer(Log.tokens_video ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test_anova <- anova(age.test.video.tokens, age.test.video.tokens.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.cdi <- lmer(Log.Totalwords ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.cdi.null <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.cdi, sex.test.cdi.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
sex.test_df <- sex.test_anova$`Chi Df`[2]
sex.test_chisq <- sex.test_anova$Chisq[2]
sex.test_p.value <- sex.test_anova$pval[2]
sex.test.video.tokens <- lmer(Log.tokens_video ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.video.tokens.null <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.video.tokens, sex.test.video.tokens.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
cor.age <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
cor.edu <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.edu.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$Total.words
, method = "spearman"
)
cor.age.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup6) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup6, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
# Checking consistency with words produced in recordings
# Tokens - video
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.tokens_anova_video <- anova(sibsYN.model.tokens_video, sibsYN.model.tokens_video.null) # NS
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.tokens_anova_video <- anova(sibgroup.model.tokens_video, sibgroup.model.tokens_video.null) # NS
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.tokens_anova_video <- anova(sibnumber.model.tokens_video, sibnumber.model.tokens_video.null) # NS
# Types - video
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.types_video <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.types_anova_video <- anova(sibsYN.model.types_video, sibsYN.model.types_video.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.types_video <- lmerTest::lmer(Log.types_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.types_anova_video <- anova(sibgroup.model.types_video, sibgroup.model.types_video.null) # p<.001
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.types_video <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.types_anova_video <- anova(sibnumber.model.types_video, sibnumber.model.types_video.null) # NS
# Tokens - audio
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.tokens_anova_audio <- anova(sibsYN.model.tokens_audio, sibsYN.model.tokens_audio.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.tokens_anova_audio <- anova(sibgroup.model.tokens_audio, sibgroup.model.tokens_audio.null) # NS
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.tokens_anova_audio <- anova(sibnumber.model.tokens_audio, sibnumber.model.tokens_audio.null) # p=.05
# Types - audio
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.types_anova_audio <- anova(sibsYN.model.types_audio, sibsYN.model.types_audio.null) # p<.05
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Count = ifelse(model == "sibsYN.model", "CDI", NA),
Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
Data = ifelse(grepl("video", model), "Video", NA),
Data = ifelse(grepl("audio", model), "Audio", Data),
Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Count, Model, Data, Df, Chisq, `p value`)
siblings.model.summary.video <- summary(sibsYN.model.types_video)
siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
siblings.model.summary.video.table
siblings.model.summary.video <- summary(siblings.model.types_video)
siblings.model.summary.video <- summary(siblings.model.types_video)
siblings.model.summary.video <- summary(sibnumber.model.types_video)
siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
siblings.model.summary.video.table
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
siblings.model.summary.table
siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
reading.summary <- utterance.type.PC %>% group_by(SibGroup6, subj) %>%
filter(audio_video == "video") %>%
# filter(Type == "r") %>%
summarise(meanPC = mean(PC),
medPC = median(PC),
sdPC = sd(PC))
reading.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.anova <- anova(reading.model, reading.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
reading.anova
reading.summary <- utterance.type.PC %>% group_by(SibGroup6, subj) %>%
filter(audio_video == "video") %>%
filter(Type == "r") %>%
summarise(meanPC = mean(PC),
medPC = median(PC),
sdPC = sd(PC))
reading.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.anova <- anova(reading.model, reading.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
reading.anova
View(utterance.type.PC)
reading.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.anova <- anova(reading.model, reading.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
