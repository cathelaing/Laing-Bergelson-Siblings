sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(SibGroup6) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
cap = "Data summary of all three input variables and reported vocabulary size at 18 months."
kable(table.data.summary, "latex", booktabs = T, caption = cap, digits = 2, align = "c")  %>%
add_header_above(c(" " = 1, "No siblings" = 2, "1 sibling" = 2, "2+ siblings" = 2))
par(cex = 1.2)
Figure.speaker.count
cap <- sprintf("Mean number of words produced by Mothers, Fathers and Siblings across sessions recorded between 10-17 months. Circles represent values for individual infants; red triangles show group means.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
summary(speaker.type.model)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj) %>%
mutate(MeanN = mean(Family.input)) %>%
filter(Speaker == "MOT" & month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Family.input))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
sib.present <- speaker.type %>%
filter(Speaker == "SIBLING" & SibsYN == "Y" & audio_video == "video") %>%
mutate(present = ifelse(n > 0, 1, 0)) %>%
group_by(present) %>%
tally() %>%
mutate(total = sum(n),
prop.present = n/total) %>%
filter(present == 1)
# Difference in amount of input from siblings
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
speaker.type.SIB_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
speaker.type.SIB_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
# Difference in amount of input from mothers
speaker.type.MOT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "MOT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.MOT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.MOT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
# Difference in amount of input from fathers
speaker.type.FAT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "FAT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.FAT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.FAT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
reading.summary <- utterance.type.PC %>% group_by(SibGroup6, subj) %>%
filter(audio_video == "video") %>%
filter(Type == "r") %>%
summarise(meanPC = mean(PC),
medPC = median(PC),
sdPC = sd(PC))
reading.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(utterance.type.PC, Type == "r" & audio_video == "video"), REML=FALSE)
reading.anova <- anova(reading.model, reading.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
reading_df <- reading.anova$Df[2]
reading_chisq <- reading.anova$Chisq[2]
reading_p.value <- reading.anova$pval[2]
# Posthoc tests
#shapiro.test(reading.summary$meanPC) # not normal
reading_wilcox_none_one <- wilcox.test(
x = subset(reading.summary, SibGroup6 == "None")$meanPC
, y = subset(reading.summary, SibGroup6 == "One")$meanPC
, paired = FALSE
) # NS
reading_wilcox_one_two <- wilcox.test(
x = subset(reading.summary, SibGroup6 == "2+")$meanPC
, y = subset(reading.summary, SibGroup6 == "One")$meanPC
, paired = FALSE
) # p=.01
par(cex = 1.2)
Figure.reading
cap <- sprintf("Proportion of words produced by the caregiver during book-reading, across sibling groups. Error bars indicate mean words heard while reading across groups, with bootstrapped 95%% CIs computed over all data. Dots indicate mean number of object words heard during book-reading per infant, collapsed across age and jittered horizontally for visual clarity.")
in.cdi.summary <- in.cdi %>% group_by(SibGroup6, subj) %>%
filter(audio_video == "video") %>%
summarise(meanPC = mean(PC),
medPC = median(PC),
sdPC = sd(PC))
#shapiro.test(in.cdi.summary$meanPC) # normal
in.cdi.summary.n <- in.cdi %>% group_by(SibGroup6, subj) %>%
filter(audio_video == "video") %>%
summarise(meann = mean(n),
medn = median(n),
sdn = sd(n))
#shapiro.test(in.cdi.summary.n$meann) # not normal
in.cdi.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(in.cdi, audio_video == "video"), REML=FALSE)
in.cdi.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(in.cdi, audio_video == "video"), REML=FALSE)
in.cdi.anova <- anova(in.cdi.model, in.cdi.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
in.cdi_df <- in.cdi.anova$Df[2]
in.cdi_chisq <- in.cdi.anova$Chisq[2]
in.cdi_p.value <- in.cdi.anova$pval[2]
# Posthoc tests
in.cdi_wilcox_none_one <- wilcox.test(
x = subset(in.cdi.summary, SibGroup6 == "None")$meanPC
, y = subset(in.cdi.summary, SibGroup6 == "One")$meanPC
, paired = FALSE
) # NS
in.cdi_wilcox_one_two <- wilcox.test(
x = subset(in.cdi.summary, SibGroup6 == "2+")$meanPC
, y = subset(in.cdi.summary, SibGroup6 == "One")$meanPC
, paired = FALSE
) # p=.01
# shapiro.test(in.cdi$n)
#
# in.cdi.model.n <- lmerTest::lmer(log(n+1) ~ SibGroup6 + month + (1|subj), data=in.cdi, REML=FALSE)
# in.cdi.model.n.null <- lmerTest::lmer(log(n+1) ~ month + (1|subj), data=in.cdi, REML=FALSE)
# in.cdi.n.anova <- anova(in.cdi.model.n, in.cdi.model.n.null) %>% # p<.01
#   rename("pval" = `Pr(>Chisq)`)
#
# in.cdi.n_df <- in.cdi.n.anova$Df[2]
# in.cdi.n_chisq <- in.cdi.n.anova$Chisq[2]
# in.cdi.n_p.value <- in.cdi.n.anova$pval[2]
#
# # Posthoc tests
#
# in.cdi.n_wilcox_none_one <- wilcox.test(
#   x = subset(in.cdi.summary.n, SibGroup6 == "None")$meann
#   , y = subset(in.cdi.summary.n, SibGroup6 == "One")$meann
#   , paired = FALSE
# ) # NS
#
# in.cdi.n_wilcox_one_two <- wilcox.test(
#   x = subset(in.cdi.summary.n, SibGroup6 == "2+")$meann
#   , y = subset(in.cdi.summary.n, SibGroup6 == "One")$meann
#   , paired = FALSE
# ) # p=.01
par(cex = 1.2)
Figure.in.cdi
cap <- sprintf("Proportion of early-acquired words in the input, across sibling groups. Error bars indicate mean learnable words heard across groups, with bootstrapped 95%% CIs computed over all data. Dots indicate mean number of early-acquired words per infant, collapsed across age and jittered horizontally for visual clarity.")
object.presence.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, SibGroup6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
#shapiro.test(object.presence.summary$mean.object) # not normal
object.presence.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence_df <- object.presence.anova$Df[2]
object.presence_chisq <- object.presence.anova$Chisq[2]
object.presence_p.value <- object.presence.anova$pval[2]
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
object.presence1.beta <- as.numeric(table.object.presence.model.summary$betaval[2])  # beta vals for Sib Group One
object.presence1.beta <- abs(object.presence1.beta*100)
object.presence2.beta <- as.numeric(table.object.presence.model.summary$betaval[3]) # beta vals for Sib Group 2+
object.presence2.beta <- abs(object.presence2.beta*100)
# Posthoc tests
object.presence_wilcox_none_one <- wilcox.test(
x = subset(object.presence.summary, SibGroup6 == "None")$mean.object
, y = subset(object.presence.summary, SibGroup6 == "One")$mean.object
, paired = FALSE
) # p<.001
object.presence_wilcox_one_two <- wilcox.test(
x = subset(object.presence.summary, SibGroup6 == "2+")$mean.object
, y = subset(object.presence.summary, SibGroup6 == "One")$mean.object
, paired = FALSE
) # p=.02
par(cex = 1.2)
Figure.object.presence
cap <- sprintf("Proportion of input words produced with object presence in the input across sibling groups. Error bars and black triangles show 95%% CIs and mean proportion of object presence across sibling groups. Dots indicate mean proportion of object presence per infant, collapsing across age and jittered horizontally for visual clarity.")
cdi_words <- in.cdi %>% summarise(total = sum(Total),
sum_n = sum(n),
PC_cdi = sum_n/total)
nCDI <- wordlist %>% distinct(CDIform) %>% tally()
wordlist %>% filter(in_cdi == T) %>% group_by(CDIform) %>% tally() %>% arrange(desc(n))
r_refs(file = "r-references.bib")
other.speaker.data <-
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
other.speaker.data
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova,
sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
sibsYN.types_anova_video, sibsYN.types_anova_audio,
sibgroup.types_anova_video, sibgroup.types_anova_audio,
sibnumber.types_anova_video, sibnumber.types_anova_audio) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Count = ifelse(model == "sibsYN.model", "CDI", ""),
Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
Data = ifelse(grepl("video", model), "Video", NA),
Data = ifelse(grepl("audio", model), "Audio", Data),
Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Count, Model, Data, Df, Chisq, `p value`)
knitr::opts_chunk$set(echo = TRUE)
speaker.type.model <- lmerTest::lmer(Log.n ~ Siblings6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
anova(speaker.type.model, speaker.type.model.null) # ns
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
mutate(total.n = sum(n)) %>%
group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n)) %>%
mutate(PC.input = (total.speaker/total.n)*100)
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup6 != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(SibGroup6) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
summary(speaker.type.model)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj) %>%
mutate(MeanN = mean(Family.input)) %>%
filter(Speaker == "MOT" & month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Family.input))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
r round(speaker.summary$PC.input[2],0)
speaker.summary$PC.input[2],0
speaker.summary$PC.input[2]
r round(speaker.summary$PC.input[2])
speaker.summary$PC.input
speaker.summary$PC.input[2]
speaker.summary
View(speaker.summary)
speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))
speaker.summary.PC<- speaker.summary %>%
group_by(Speaker) %>%
summarise(PC.input = mean(PC.input, na.rm=T),
sd.input = sd(PC.input))
speaker.summary.PC
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
mutate(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, month, Speaker) %>%
mutate(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, month, Speaker) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
ungroup() %>%
group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
#ungroup() %>%
group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
#ungroup() %>%
# group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
#ungroup() %>%
group_by(subj) %>%
summarise(total.speaker = sum(n))
all.speakers <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj) %>%
summarise(total.speaker = sum(n))
View(all.speakers)
speakers.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
left_join(all.speakers)
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
left_join(all.speakers)
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.n = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
all.speakers <- speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
speaker.summary <-
speaker.type %>%
filter(audio_video == "video") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100,
sd.input = sd(PC.input)) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.MOT
r round(PC.MOT$PCMOT)
PC.MOT$PCMOT
round(PC.MOT$PCMOT)
round(PC.FAT$PCFAT)
View(speaker.summary)
View(speaker.type)
View(reading.summary)
View(sib.present)
sib.present <- speaker.type %>%
filter(Speaker == "SIBLING" & SibsYN == "Y" & audio_video == "video") %>%
mutate(present = ifelse(n > 0, 1, 0)) %>%
group_by(present) %>%
tally() %>%
mutate(total = sum(n),
prop.present = n/total*100) %>%
filter(present == 1)
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "0")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "4")$MeanN
, paired = FALSE
) # NS
in.cdi.model <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(in.cdi,  audio_video == "video"), REML=FALSE)
in.cdi.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(in.cdi,  audio_video == "video"), REML=FALSE)
anova(in.cdi.model, in.cdi.model.null) # NS
object.presence.model <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence, audio_video == "video"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence, audio_video == "video"), REML=FALSE)
anova(object.presence.model, object.presence.model.null) # p<.001
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "audio"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "audio"), REML=FALSE)
anova(speaker.type.model, speaker.type.model.null)
in.cdi.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(in.cdi, audio_video == "audio"), REML=FALSE)
in.cdi.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(in.cdi, audio_video == "audio"), REML=FALSE)
in.cdi.anova <- anova(in.cdi.model, in.cdi.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
in.cdi.anova
object.presence.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence.anova
