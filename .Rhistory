pivot_wider(names_from = caregiver, values_from = total) %>%
ungroup() %>%
dplyr::select(-speaker) %>%
group_by(Speaker) %>%
summarise(`Caregiver 1` = sum(CG1,na.rm = T),
`Caregiver 2` = sum(CG2,na.rm = T)) %>%
arrange(desc(`Caregiver 1`))
# data with 2 mothers - both are counted in the mother row
# number of video sessions (from a total of )
#43*8 # 344 sessions recorded in total
cap = "Numer of sessions in which each adult speaker is one of the two main caregivers. There were 344 hour-long video recordings in total across the 43 infants in the dataset. In the case where the infant had two mothers, their data was aggregated into the 'Mother' category; in all but two sessions from this family, the two mothers were the two main caregivers."
kable(speakers.sessions, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, align="c")
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
mat.corr.matrix <- corrplot(corr.matrix, method = "number")
par(cex = 1.2)
mat.corr.matrix
cap <- sprintf("Correlation matrix showing correlation coefficient of Spearman's correlation tests between maternal factors (age and education), number of siblings, and number of words reported to be produced by the child at age 18 months. Colours represent strength of correlation, whereby bolder colours indicate a stronger correlation between variables.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.discrete <- summary(speaker.type.model.discrete)
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.discrete.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
object.presence.model.discrete <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.anova.discrete <- anova(object.presence.model.discrete, object.presence.model.null.discrete) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary.discrete <- summary(object.presence.model.discrete)
table.object.presence.model.discrete.summary <- object.presence.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.discrete <- rbind(input.model.summary.table.discrete, table.object.presence.model.discrete.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
table.input.model.output.discrete <- rbind(speaker.type_anova.discrete, object.presence.anova.discrete
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to discrete sibling number. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to discrete sibling number. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speaker.type.red <- speaker.type %>% filter(subj != 738)
speaker.type.model.null.red <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.red <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.red <- anova(speaker.type.model.red, speaker.type.model.null.red) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.red <- summary(speaker.type.model.red)
input.model.summary.table.red <- input.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.red <- object.presence %>% filter(subj != 738)
object.presence.model.red <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.model.null.red <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.anova.red <- anova(object.presence.model.red, object.presence.model.null.red) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary.red <- summary(object.presence.model.red)
table.object.presence.model.red.summary <- object.presence.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
table.input.model.output.red <- rbind(speaker.type_anova.red, object.presence.anova.red
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to sibling group, with one infant removed who was identified as hearing substantially more input speech (3SDs above the group mean) in 4 recordings (n=42). Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output.red, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
speaker.type <- speaker.type %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
table.input.model.output <- rbind(speaker.type_anova, object.presence.anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
input.variables.model.summaries.audio <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to sibling group in the audio data. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to sibling group, for the audio data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.audio, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speakers.sessions <- speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
group_by(speaker, caregiver, month) %>% tally() %>% summarise(total = sum(n)) %>%
mutate(speaker = str_to_title(speaker)) %>%
mutate(Speaker = ifelse(speaker == "Fat", "Father", speaker),
Speaker = ifelse(speaker %in% c("Mot", "Mt2"), "Mother", Speaker),
Speaker = ifelse(speaker == "Grm", "Grandmother", Speaker),
Speaker = ifelse(speaker == "Grp", "Grandfather", Speaker),
Speaker = ifelse(speaker == "Mot+Fat", "Both parents", Speaker),
Speaker = as.factor(Speaker)) %>%
pivot_wider(names_from = caregiver, values_from = total) %>%
ungroup() %>%
dplyr::select(-speaker) %>%
group_by(Speaker) %>%
summarise(`Caregiver 1` = sum(CG1,na.rm = T),
`Caregiver 2` = sum(CG2,na.rm = T)) %>%
arrange(desc(`Caregiver 1`))
# data with 2 mothers - both are counted in the mother row
# number of video sessions (from a total of )
#43*8 # 344 sessions recorded in total
cap = "Numer of sessions in which each adult speaker is one of the two main caregivers. There were 344 hour-long video recordings in total across the 43 infants in the dataset. In the case where the infant had two mothers, their data was aggregated into the 'Mother' category; in all but two sessions from this family, the two mothers were the two main caregivers."
kable(speakers.sessions, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, align="c")
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
mat.corr.matrix <- corrplot(corr.matrix, method = "number")
par(cex = 1.2)
mat.corr.matrix
cap <- sprintf("Correlation matrix showing correlation coefficient of Spearman's correlation tests between maternal factors (age and education), number of siblings, and number of words reported to be produced by the child at age 18 months. Colours represent strength of correlation, whereby bolder colours indicate a stronger correlation between variables.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.discrete <- summary(speaker.type.model.discrete)
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.discrete.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
object.presence.model.discrete <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.anova.discrete <- anova(object.presence.model.discrete, object.presence.model.null.discrete) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary.discrete <- summary(object.presence.model.discrete)
table.object.presence.model.discrete.summary <- object.presence.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.discrete <- rbind(input.model.summary.table.discrete, table.object.presence.model.discrete.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
table.input.model.output.discrete <- rbind(speaker.type_anova.discrete, object.presence.anova.discrete
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to discrete sibling number. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to discrete sibling number. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speaker.type.red <- speaker.type %>% filter(subj != 738)
speaker.type.model.null.red <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.red <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.red <- anova(speaker.type.model.red, speaker.type.model.null.red) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.red <- summary(speaker.type.model.red)
input.model.summary.table.red <- input.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.red <- object.presence %>% filter(subj != 738)
object.presence.model.red <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.model.null.red <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.anova.red <- anova(object.presence.model.red, object.presence.model.null.red) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary.red <- summary(object.presence.model.red)
table.object.presence.model.red.summary <- object.presence.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
table.input.model.output.red <- rbind(speaker.type_anova.red, object.presence.anova.red
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to sibling group, with one infant removed who was identified as hearing substantially more input speech (3SDs above the group mean) in 4 recordings (n=42). Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output.red, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to sibling group, with one infant removed who was identified as hearing substantially more input speech (3SDs above the group mean) in 4 recordings (n=42). Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.red, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(5, hline_after = T)
remotes::install_github("crsh/rmdfiltr")
knit_with_parameters("C:/Code/Laing-Bergelson-Siblings/SiblingsStudy_SupplementaryData.Rmd")
unlink("SiblingsStudy_SupplementaryData_cache", recursive = TRUE)
devtools::install_github("tinytex")
tinytex::reinstall_tinytex()
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
speaker.type <- speaker.type %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 351 & !month %in% c("06", "07", "08", "09"))
knitr::opts_chunk$set(echo = TRUE)
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
table.input.model.output <- rbind(speaker.type_anova, object.presence.anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
input.variables.model.summaries.audio <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Full model output from linear mixed effects regression models comparing our two input measures in relation to sibling group in the audio data. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to sibling group, for the audio data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.audio, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speakers.sessions <- speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
group_by(speaker, caregiver, month) %>% tally() %>% summarise(total = sum(n)) %>%
mutate(speaker = str_to_title(speaker)) %>%
mutate(Speaker = ifelse(speaker == "Fat", "Father", speaker),
Speaker = ifelse(speaker %in% c("Mot", "Mt2"), "Mother", Speaker),
Speaker = ifelse(speaker == "Grm", "Grandmother", Speaker),
Speaker = ifelse(speaker == "Grp", "Grandfather", Speaker),
Speaker = ifelse(speaker == "Mot+Fat", "Both parents", Speaker),
Speaker = as.factor(Speaker)) %>%
pivot_wider(names_from = caregiver, values_from = total) %>%
ungroup() %>%
dplyr::select(-speaker) %>%
group_by(Speaker) %>%
summarise(`Caregiver 1` = sum(CG1,na.rm = T),
`Caregiver 2` = sum(CG2,na.rm = T)) %>%
arrange(desc(`Caregiver 1`))
# data with 2 mothers - both are counted in the mother row
# number of video sessions (from a total of )
#43*8 # 344 sessions recorded in total
cap = "Numer of sessions in which each adult speaker is one of the two main caregivers. There were 344 hour-long video recordings in total across the 43 infants in the dataset. In the case where the infant had two mothers, their data was aggregated into the 'Mother' category; in all but two sessions from this family, the two mothers were the two main caregivers."
kable(speakers.sessions, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, align="c")
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
mat.corr.matrix <- corrplot(corr.matrix, method = "number")
par(cex = 1.2)
plot(mat.corr.matrix)
par(cex = 1.2)
mat.corr.matrix
cap <- sprintf("Correlation matrix showing correlation coefficient of Spearman's correlation tests between maternal factors (age and education), number of siblings, and number of words reported to be produced by the child at age 18 months. Colours represent strength of correlation, whereby bolder colours indicate a stronger correlation between variables.")
mat.corr.matrix <- corrplot(corr.matrix, method = "number")
View(mat.corr.matrix)
update.packages()
