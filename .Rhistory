colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size))
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3")
all_data <- rbind(data_arr_poster, data_arr_book1, data_arr_book2) %>%
write_csv("data_arranged_all_levels.csv")
stimuli <- read_csv("stimuli.csv")
large_items <- c("tree", "pig", "duck", "sheep",
"bed", "dog", "elephant", "lion",
"car", "tractor", "cow", "horse",
"bus", "monkey", "chair", "bike",
"tiger", "bath")
data_arr <- stimuli
data_arr$Word <- gsub("\\ ", "_", data_arr$stimuli)
data_arr_book1 <- data_arr %>%
filter(book %in% c("1a", "1ar", "1b", "1br", "1c", "1cr", "1d", "1dr")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "2")
data_arr_poster <- data_arr %>%
filter(book %in% c("p1", "p2", "p3", "p4")) %>%
mutate(Word = tolower(Word))  %>%
separate(Word, c("image_1", "image_2"), "_") %>%
mutate(item=pmap_chr(list(image_1, image_2), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1))  %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "1",
LR = NA)
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3")
data_arr_book1 <- data_arr %>%
filter(book %in% c("1a", "1ar", "1b", "1br", "1c", "1cr", "1d", "1dr")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "2",
colour = NA)
data_arr_poster <- data_arr %>%
filter(book %in% c("p1", "p2", "p3", "p4")) %>%
mutate(Word = tolower(Word))  %>%
separate(Word, c("image_1", "image_2"), "_") %>%
mutate(item=pmap_chr(list(image_1, image_2), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1))  %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "1",
LR = NA,
colour = NA)
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3")
all_data <- rbind(data_arr_poster, data_arr_book1, data_arr_book2) %>%
write_csv("data_arranged_all_levels.csv")
View(data_arr_book1)
View(data_arr_poster)
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3",
RWsize = NA)
all_data <- rbind(data_arr_poster, data_arr_book1, data_arr_book2) %>%
write_csv("data_arranged_all_levels.csv")
View(data_arr_book2)
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3",
RWsize = NA,
congruence = NA)
all_data <- rbind(data_arr_poster, data_arr_book1, data_arr_book2) %>%
write_csv("data_arranged_all_levels.csv")
stimuli <- read_csv("SS_audio_analysis.csv")
stimuli <- read_csv("SS_audio_analysis.csv")
SS_participants <- read_csv("SS_audio_analysis.csv")
View(SS_participants)
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
#names_prefix = "image_",
values_to = "book",
values_drop_na = TRUE
)
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
mutate(Poster = as.factor(Poster)) %>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
#names_prefix = "image_",
values_to = "book",
values_drop_na = TRUE
)
SS_participants <- read_csv("SS_audio_analysis.csv")
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
mutate(#Poster = as.factor(Poster),
Poster = fct_recode(Poster,
1 = "P1",
2 = "P2",
3 = "P3",
4 = "P4"))
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
mutate(#Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"P1" = 1,
"P2" = 2,
"P3" = 3,
"P4" = 4))
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"P1" = "1",
"P2" = "2",
"P3" = "3",
"P4" = "4"))
SS_participants <- read_csv("SS_audio_analysis.csv")%>%
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"P1" = "1",
"P2" = "2",
"P3" = "3",
"P4" = "4"))
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"P1" = "1",
"P2" = "2",
"P3" = "3",
"P4" = "4")) %>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
values_to = "book",
values_drop_na = TRUE
)
View(all_data)
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"p1" = "1",
"p2" = "2",
"p3" = "3",
"p4" = "4")) %>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
values_to = "book",
values_drop_na = TRUE
)
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"p1" = "1",
"p2" = "2",
"p3" = "3",
"p4" = "4")) %>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
values_to = "book",
values_drop_na = TRUE
) %>%
left_join(all_data)
stimuli <- read_csv("stimuli.csv")
large_items <- c("tree", "pig", "duck", "sheep",
"bed", "dog", "elephant", "lion",
"car", "tractor", "cow", "horse",
"bus", "monkey", "chair", "bike",
"tiger", "bath")
data_arr <- stimuli
data_arr$Word <- gsub("\\ ", "_", data_arr$stimuli)
data_arr_book1 <- data_arr %>%
filter(book %in% c("1a", "1ar", "1b", "1br", "1c", "1cr", "1d", "1dr")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "2",
colour = NA)
data_arr_poster <- data_arr %>%
filter(book %in% c("p1", "p2", "p3", "p4")) %>%
mutate(Word = tolower(Word))  %>%
separate(Word, c("image_1", "image_2"), "_") %>%
mutate(item=pmap_chr(list(image_1, image_2), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(test = ifelse(word == tolower(col1), T, F)) %>%
mutate(size = ifelse(test == T & word == col1, 1, NA),
size = ifelse(test == T & word != col1, -1, size),
size = ifelse(test == F & word == col2, 1, size),
size = ifelse(test == F & word != col2, -1, size)) %>%
mutate(RWsize = ifelse(word %in% large_items, "L", "S"),
congruence = ifelse((RWsize == "L" & size == -1) | (RWsize == "S" & size == 1) , 1, -1))  %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "1",
LR = NA,
colour = NA)
data_arr_book2 <- data_arr %>%
filter(book %in% c("2", "2r")) %>%
mutate(Word = tolower(Word)) %>%
separate(Word, c("image_L", "image_R"), "_") %>%
mutate(item=pmap_chr(list(image_L, image_R), ~paste(sort(c(...)), collapse = "_")))  %>%
pivot_longer(
cols = starts_with("image"),
names_to = "LR",
names_prefix = "image_",
values_to = "word",
values_drop_na = TRUE
) %>%
separate(stimuli, c("col1", "col2"), " ") %>%
mutate(colour = ifelse(book == "2" & word == "clock" & LR == "L", 1, NA),
colour = ifelse(book == "2" & word == "clock" & LR == "R", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "glasses" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "L", -1, colour),
colour = ifelse(book == "2" & word == "bowl" & LR == "R", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "L", 1, colour),
colour = ifelse(book == "2" & word == "coat" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "clock" & LR == "R", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "glasses" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "L", 1, colour),
colour = ifelse(book == "2r" & word == "bowl" & LR == "R", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "L", -1, colour),
colour = ifelse(book == "2r" & word == "coat" & LR == "R", 1, colour),
test = ifelse(word == tolower(col1), T, F),
size = ifelse(is.na(colour) & test == T & word == col1 & LR == "L", 1, NA),
size = ifelse(is.na(colour) & test == T & word == col2 & LR == "R", 1, size),
size = ifelse(is.na(colour) & test == T & word != col1 & LR == "L", -1, size),
size = ifelse(is.na(colour) & test == T & word != col2 & LR == "R", -1, size)) %>%
dplyr::select(-test, -col1, -col2) %>%
mutate(paradigm = "3",
RWsize = NA,
congruence = NA)
all_data <- rbind(data_arr_poster, data_arr_book1, data_arr_book2)
SS_participants <- read_csv("SS_audio_analysis.csv") %>%
mutate(Poster = as.factor(Poster),
Poster = fct_recode(Poster,
"p1" = "1",
"p2" = "2",
"p3" = "3",
"p4" = "4")) %>%
pivot_longer(
cols = c("Book 1", "Poster", "Book 2"),
names_to = "Allocation",
values_to = "book",
values_drop_na = TRUE
) %>%
left_join(all_data) %>%
write_csv("data_arranged_all_levels.csv")
