#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
#sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
#  sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
#  sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
#   sibsYN.types_anova_video, sibsYN.types_anova_audio,
#   sibgroup.types_anova_video, sibgroup.types_anova_audio,
#    sibnumber.types_anova_video, sibnumber.types_anova_audio
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
# mutate(Count = ifelse(model == "sibsYN.model", "CDI", ""),
#                 Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
#        Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
#        Data = ifelse(grepl("video", model), "Video", NA),
#        Data = ifelse(grepl("audio", model), "Audio", Data),
#        Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
# cap = "Output from regression models comparing language development over time in relation to sibling number (binary, grouped and discrete variables). Month was included in each model as a fixed effect; subject was included as a random effect."
# #apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
# kable(table.sibling.model.output, "latex", booktabs=T, longtable=T,
#       caption=cap, digits=2, align="c")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(`$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("beta" = `$b$`)
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
table.sibgroup.model.summary <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#  digits = c(2, 2, 2, 2, 3, 0)
#  , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
#  select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
sibgroup1.beta <- as.numeric(table.sibgroup.model.summary$beta[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(table.sibgroup.model.summary$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
# siblings.model.summary.video <- summary(sibnumber.model.types_video)
#
# siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
#   as.data.frame %>%
#   rename(
#     "$b$" = "Estimate"
#     , "SE" = "Std. Error"
#     , "$df$" = "df"
#     , "$t$" = "t value"
#     , "$p$" = "Pr(>|t|)"
#   ) %>%
#   mutate(
#     Effect = papaja:::beautify_terms(rownames(.))
#   ) %>%
#   printnum(
#     digits = c(2, 2, 2, 2, 3, 0)
#     , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#     , zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#   ) %>%
#   select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
#   rename("betaval" = `$b$`)
#
# siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
#
# siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
#shapiro.test(SiblingsData$Total.words) # not normal
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included in each model as a fixed effect; subject was included as a random effect."
#apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
caption=cap, digits=2, align="c")
par(cex = 1.2)
Figure.SibGroup
cap <- sprintf("Reported productive vocabulary acquisition (CDI) over time. Colors denote sibling group; line with grey confidence band reflects local estimator (loess) fit over individual infantsâ€™ vocabulary at each month. Triangles indicate mean with bootstrapped CIs computed over each month's data. Points (jittered horizontally) show individual infants' vocabulary size at each month. Y-axis utilizes log-transformed vertical spacing for visual clarity.")
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for age
age.test.input_df <- age.test.input_anova$Df[2]
age.test.input_chisq <- age.test.input_anova$Chisq[2]
age.test.input_p.value <- age.test.input_anova$pval[2]
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # Strong effect for sex - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for sex
sex.test.input_df <- sex.test.input_anova$`Chi Df`[2]
sex.test.input_chisq <- sex.test.input_anova$Chisq[2]
sex.test.input_p.value <- sex.test.input_anova$pval[2]
cor.edu.input <- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$MOTedulevel
, method = "spearman"
)
cor.vocab.input <- cor.test(
x = subset(SiblingsData, month == 17)$Total.words
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, method = "spearman"
)
cor.age.input<- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$age_mom
, method = "spearman"
)
all.speakers <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.FAT <- speaker.summary %>%
filter(Speaker == "FAT") %>%
summarise(PCFAT = mean(PC.input),
SDFAT = sd(PC.input))
PC.SIB <- speaker.summary %>%
filter(Speaker == "SIBLING") %>%
summarise(PCSIB = mean(PC.input),
SDSIB = sd(PC.input))
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup6 != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(SibGroup6) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
cap = "Data summary of all three input variables and reported vocabulary size at 18 months."
kable(table.data.summary, "latex", booktabs = T, caption = cap, digits = 2, align = "c")  %>%
add_header_above(c(" " = 1, "No siblings" = 2, "1 sibling" = 2, "2+ siblings" = 2))
par(cex = 1.2)
Figure.speaker.count
cap <- sprintf("Mean number of words produced by Mothers, Fathers and Siblings across sessions recorded between 10-17 months. Circles represent values for individual infants; red triangles show group means.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
summary(speaker.type.model)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
mutate(MeanN = mean(n)) %>%
filter(month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(n))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
sib.present <- speaker.type %>%
filter(Speaker == "SIBLING" & SibsYN == "Y" & audio_video == "video") %>%
mutate(present = ifelse(n > 0, 1, 0)) %>%
group_by(present) %>%
tally() %>%
mutate(total = sum(n),
prop.present = n/total*100) %>%
filter(present == 1)
# Difference in amount of input from siblings
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
speaker.type.SIB_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
speaker.type.SIB_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
# Difference in amount of input from mothers
speaker.type.MOT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "MOT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.MOT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.MOT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
# Difference in amount of input from fathers
speaker.type.FAT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "FAT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.FAT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.FAT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
object.presence.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, SibGroup6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
#shapiro.test(object.presence.summary$mean.object) # not normal
object.presence.model <- lmerTest::lmer(PC ~ SibGroup6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence_df <- object.presence.anova$Df[2]
object.presence_chisq <- object.presence.anova$Chisq[2]
object.presence_p.value <- object.presence.anova$pval[2]
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#  digits = c(2, 2, 2, 2, 3, 0)
#   , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(`$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
object.presence1.beta <- as.numeric(table.object.presence.model.summary$betaval[2])  # beta vals for Sib Group One
object.presence1.beta <- abs(object.presence1.beta*100)
object.presence2.beta <- as.numeric(table.object.presence.model.summary$betaval[3]) # beta vals for Sib Group 2+
object.presence2.beta <- abs(object.presence2.beta*100)
# Posthoc tests
object.presence_wilcox_none_one <- wilcox.test(
x = subset(object.presence.summary, SibGroup6 == "None")$mean.object
, y = subset(object.presence.summary, SibGroup6 == "One")$mean.object
, paired = FALSE
) # p<.001
object.presence_wilcox_one_two <- wilcox.test(
x = subset(object.presence.summary, SibGroup6 == "2+")$mean.object
, y = subset(object.presence.summary, SibGroup6 == "One")$mean.object
, paired = FALSE
) # p=.02
par(cex = 1.2)
Figure.object.presence
cap <- sprintf("Proportion of input words produced with object presence in the input across sibling groups. Error bars and black triangles show 95%% CIs and mean proportion of object presence across sibling groups. Dots indicate mean proportion of object presence per infant, collapsing across age and jittered horizontally for visual clarity.")
cdi_words <- in.cdi %>% summarise(total = sum(Total),
sum_n = sum(n),
PC_cdi = sum_n/total)
nCDI <- wordlist %>% distinct(CDIform) %>% tally()
wordlist %>% filter(in_cdi == T) %>% group_by(CDIform) %>% tally() %>% arrange(desc(n))
table.sibling.number
siblings.model.summary.table
View(siblings.model.summary.table)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
rownames_to_column(var="Effect")
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
rownames_to_column(var="Effect") %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(`$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("beta" = `$b$`)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
rownames_to_column(var="Effect") %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("beta" = `$b$`)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("beta" = `$b$`)
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
caption=cap, digits=2, align="c")
siblings.model.summary.table
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"b" = "Estimate"
# , "SE" = "Std. Error"
# , "$df$" = "df"
# , "$t$" = "t value"
, "p" = "Pr(>|t|)"
) %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `b`, `Std. Error`, `t value`, `df`, `p`)
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
table.sibgroup.model.summary <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#  digits = c(2, 2, 2, 2, 3, 0)
#  , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
#  select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
sibgroup1.beta <- as.numeric(table.sibgroup.model.summary$beta[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(table.sibgroup.model.summary$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
# siblings.model.summary.video <- summary(sibnumber.model.types_video)
#
# siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
#   as.data.frame %>%
#   rename(
#     "$b$" = "Estimate"
#     , "SE" = "Std. Error"
#     , "$df$" = "df"
#     , "$t$" = "t value"
#     , "$p$" = "Pr(>|t|)"
#   ) %>%
#   mutate(
#     Effect = papaja:::beautify_terms(rownames(.))
#   ) %>%
#   printnum(
#     digits = c(2, 2, 2, 2, 3, 0)
#     , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#     , zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#   ) %>%
#   select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
#   rename("betaval" = `$b$`)
#
# siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
#
# siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
siblings.model.summary.table
#apa_table(siblings.model.summary.table, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
col.names = c("Effect", "\\textit{b}", "Std. Error", "\\textit{t value]", "df", "\\textit{pvalue}"),
caption=cap, digits=2, align="c")
siblings.model.summary.table
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included as a fixed effect; subject was included as a random effect."
#apa_table(siblings.model.summary.table, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
escape=FALSE,
col.names = c("Effect", "\\textit{b}", "Std. Error", "\\textit{t value]", "df", "\\textit{pvalue}"),
caption=cap, digits=2, align="c")
siblings.model.summary.table
