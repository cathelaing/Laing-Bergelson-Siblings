summarise(total = sum(n))
# PCCG1MOT <- cg1mot/caregiver1
# PCCG2MOT <- cg2mot/caregiver2
# PCCG1FAT <- cg1fat/caregiver1
# PCCG2FAT <- cg2fat/caregiver2
# speaker.type %>% filter(!(caregiver %in% c("SIB", "FAMILY")) & audio_video == "video") %>%
#   group_by(caregiver, speaker) %>%
#   tally() %>% arrange(desc(n))
modal_mot <- speaker.type %>% filter(caregiver == "CG1" & (speaker %in% c("MOT", "MT2")) & audio_video == "video") %>%
group_by(subj) %>%
tally() %>%
filter(n == 12) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
other.speaker.data <-
all.speaker.data %>%
filter(audio_video == "video") %>%
mutate(other.speakers = All.speakers - n,
prop.other = other.speakers/All.speakers) %>%
ungroup() %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
nCDI18 <- SiblingsData %>% filter(month == 18 & !is.na(Total.words)) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(!is.na(Total.words)) %>%
group_by(month) %>%
mutate(outlier_cutoff3sd = 3*sd(Total.words, na.rm=T),
mean_month = mean(Total.words, na.rm=T),
outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE) %>%
filter(month>9)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(!month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(!month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants (n=42). One child was an outlier, and was removed from the CDI analysis and this figure; see text for details."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0,
#placement = "H",
font_size = "small")
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.sex <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + sex +(1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
sibsYN_anova.sex <- anova(sibsYN.model, sibsYN.model.sex) # ns.
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.sex <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + sex + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
sibgroup_anova.sex <- anova(sibgroup.model, sibgroup.model.sex) # ns
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.sex <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + sex + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
sibnumber_anova.sex <- anova(sibnumber.model, sibnumber.model.sex) # ns
sibs.anova.sex.table <- rbind(sibnumber_anova.sex, sibgroup_anova.sex, sibsYN_anova.sex)
min.pval.sex <- min(sibs.anova.sex.table$`Pr(>Chisq)`, na.rm=T)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
cap = "Output from likelihood ratio tests comparing regression models that predict the effects of sibling number (binary, grouped and discrete variables) on vocabulary size. Month was included in each model as a fixed effect; subject was included as a random effect."
apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H",
font_size = "small")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`))
siblingnum.beta <- as.numeric(siblings.model.summary.table$Estimate[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Estimate[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(sibgroup.model.summary.table$Estimate[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
#shapiro.test(SiblingsData$Total.words) # not normal
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included as a fixed effect; subject was included as a random effect."
kable(sibgroup.model.summary.table, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
par(cex = 1.2)
Figure.SibGroup
cap <- sprintf("Reported productive vocabulary acquisition (CDI) over time. Colors denote sibling group; line with colored confidence band reflects local estimator (loess) fit over individual infantsâ€™ vocabulary at each month. Triangles indicate mean with bootstrapped CIs computed over each month's data. Points (jittered horizontally) show individual infants' vocabulary size at each month. Y-axis utilizes log-transformed vertical spacing for visual clarity.")
# caregiver input
speaker.type %>% filter(audio_video == "video" & caregiver == "FAMILY") %>%
group_by(month) %>%
mutate(outlier_cutoff3sd = 3*sd(n, na.rm=T),
mean_month = mean(n, na.rm=T),
outlier = (n >
(mean(n, na.rm=T) +
3*(sd(n, na.rm=T))) |
n <
(mean(n, na.rm=T) -
3*(sd(n, na.rm=T))))) %>%
filter(outlier == TRUE) %>%
filter(month>9)
# 738 across 4 sessions
# object presence
object.presence %>% filter(audio_video == "video") %>%
group_by(month) %>%
mutate(outlier_cutoff3sd = 3*sd(n, na.rm=T),
mean_month = mean(n, na.rm=T),
outlier = (n >
(mean(n, na.rm=T) +
3*(sd(n, na.rm=T))) |
n <
(mean(n, na.rm=T) -
3*(sd(n, na.rm=T))))) %>%
filter(outlier == TRUE) %>%
filter(month>9)
# 738 across 4 sessions
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
age.test.input_df <- age.test.input_anova$`Df`[2]
age.test.input_chisq <- age.test.input_anova$Chisq[2]
age.test.input_p.value <- age.test.input_anova$pval[2]
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # p<.05
rename("pval" = `Pr(>Chisq)`)
sex.test.input_df <- sex.test.input_anova$`Df`[2]
sex.test.input_chisq <- sex.test.input_anova$Chisq[2]
sex.test.input_p.value <- sex.test.input_anova$pval[2]
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
age.test.OP_df <- age.test.OP_anova$`Df`[2]
age.test.OP_chisq <- age.test.OP_anova$Chisq[2]
age.test.OP_p.value <- age.test.OP_anova$pval[2]
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% #p<.001
rename("pval" = `Pr(>Chisq)`)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video" & caregiver == "FAMILY") %>%
group_by(subj) %>%
mutate(MeanN = mean(n)) %>%
filter(month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`)) %>%
mutate(Variable = "Caregiver input")
inputONE.beta <- as.numeric(input.model.summary.table$Estimate[2])
inputONE.beta <- abs(inputONE.beta*100)
inputTWO.beta <- as.numeric(input.model.summary.table$Estimate[3])
inputTWO.beta <- abs(inputTWO.beta*100)
input.model.summary.table
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
input.model.summary.table
object.presence.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, SibGroup) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
input.variables.model.summaries <- rbind(input.model.summary.table, table.object.presence.model.summary)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence_df <- object.presence.anova$Df[2]
object.presence_chisq <- object.presence.anova$Chisq[2]
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries <- rbind(input.model.summary.table, table.object.presence.model.summary)
object.presence1.beta <- as.numeric(table.object.presence.model.summary$betaval[2])  # beta vals for Sib Group One
input.variables.model.summaries
input.variables.model.summaries <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect)
input.variables.model.summaries
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
table.object.presence.model.summary
input.variables.model.summaries <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `t value`, `p value`)
input.variables.model.summaries
input.model.summary.table
input.variables.model.summaries <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
input.variables.model.summaries
object.presence_wilcox_none_one <- wilcox.test(
x = subset(object.presence.summary, SibGroup == "None")$mean.object
, y = subset(object.presence.summary, SibGroup == "One")$mean.object
, paired = FALSE
) # p<.001
object.presence_wilcox_one_two <- wilcox.test(
x = subset(object.presence.summary, SibGroup == "2+")$mean.object
, y = subset(object.presence.summary, SibGroup == "One")$mean.object
, paired = FALSE
) # p=.02
object.presence_wilcox_none_one
object.presence_wilcox_one_two
input.variables.model.summaries
cg1mot <- speaker.type %>% ungroup() %>%
filter(caregiver == "CG1" & speaker %in% c("MOT", "MT2") & audio_video == "video") %>%
summarise(total = sum(n))
cg1mot
cg1mot/caregiver1
mean.input.FAT <- speaker.type %>% filter(speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.FAT
mean.input.FAT <- speaker.type %>% ungroup() %<%
filter(speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.FAT <- speaker.type %>% ungroup() %>%
filter(speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.FAT
mean.input.MOT <- speaker.type %>% group_by(subj) %>%
filter(speaker == "MOT" | speaker == "MT2" & audio_video == "video") %>%
summarise(final_n = mean(n)) %>%      # take the mean maternal input for family with 2 mothers
ungroup() %>%
summarise(mean.input = mean(final_n),
med.input = median(final_n),
sd.input = sd(final_n))
mean.input.FAT <- speaker.type %>% ungroup() %>%
filter(speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% ungroup() %>%
filter(speaker == "SIBLING" & SibGroup != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>% ungroup() %>%
filter(audio_video == "video" & speaker != "Family.input") %>%
group_by(SibGroup) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
mean.input.SIB
mean.input.all
library(readr)
library(tidyverse)
setwd("G:/My Drive/Research/Babble UK-Uganda/Research Assistant/ELAN files")
sex_data_UK <- read_csv("Human_UK_ Subject Sex summary spreadhseet.csv")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#install.packages("data.table", repos = "https://cran.rstudio.com")
library(data.table)
# Read all the files and create a FileName column to store filenames
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE, idcol = "FileName")
# Read all the files and create a FileName column to store filenames
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE, idcol = "FileName")
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data.csv")
View(UK_data)
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK)
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data.csv")
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
#filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data.csv")
library(readr)
library(tidyverse)
setwd("G:/My Drive/Research/Babble UK-Uganda/Research Assistant/ELAN files")
sex_data_UK <- read_csv("Human_UK_Subject Sex summary spreadhseet.csv")
sex_data_UK <- read_csv("Human_UK_ Subject Sex summary spreadhseet.csv")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
list_of_files
#install.packages("data.table", repos = "https://cran.rstudio.com")
library(data.table)
# Read all the files and create a FileName column to store filenames
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE, idcol = "FileName")
View(DT)
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
#filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex)
View(UK_data)
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
#filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data.csv")
UK_data <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
#filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data_newadded.csv")
UK_data2 <- DT %>%
separate(FileName, into = c("data", "vid", "age", "SubjectID", "id", "1", "2", "3"), sep = "_") %>%
dplyr::select(-data, -vid, -`1`, -`2`, -`3`, -c(V1:V7)) %>%
mutate(Context = tolower(V9),
Context = ifelse(!(Context %in% c("rest", "care", "social play", "solo play", "play")), "check", Context)) %>%
left_join(sex_data_UK) %>%
#filter(!(is.na(Sex))) %>%
group_by(Context, SubjectID, Sex) %>%
summarise(total = sum(V8)) %>%
#filter(Context != "check") %>%
pivot_wider(names_from = Context, values_from = total) %>%
mutate(rest_mins = (rest/60),
social_mins = (`social play`/60),
care_mins = (care/60)) %>%
write_csv("UK-data_newadded.csv")
View(UK_data2)
