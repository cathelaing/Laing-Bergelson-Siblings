, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
# # Checking consistency with words produced in recordings
#
# # Tokens - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_video <- anova(sibsYN.model.tokens_video, sibsYN.model.tokens_video.null) # NS
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_video <- anova(sibgroup.model.tokens_video, sibgroup.model.tokens_video.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_video <- anova(sibnumber.model.tokens_video, sibnumber.model.tokens_video.null) # NS
#
# # Types - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_video <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_video <- anova(sibsYN.model.types_video, sibsYN.model.types_video.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_video <- lmerTest::lmer(Log.types_video ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_video <- anova(sibgroup.model.types_video, sibgroup.model.types_video.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_video <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_video <- anova(sibnumber.model.types_video, sibnumber.model.types_video.null) # NS
#
# # Tokens - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_audio <- anova(sibsYN.model.tokens_audio, sibsYN.model.tokens_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_audio <- anova(sibgroup.model.tokens_audio, sibgroup.model.tokens_audio.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_audio <- anova(sibnumber.model.tokens_audio, sibnumber.model.tokens_audio.null) # p=.05
#
# # Types - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_audio <- anova(sibsYN.model.types_audio, sibsYN.model.types_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
#sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
#  sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
#  sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
#   sibsYN.types_anova_video, sibsYN.types_anova_audio,
#   sibgroup.types_anova_video, sibgroup.types_anova_audio,
#    sibnumber.types_anova_video, sibnumber.types_anova_audio
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
# mutate(Count = ifelse(model == "sibsYN.model", "CDI", ""),
#                 Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
#        Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
#        Data = ifelse(grepl("video", model), "Video", NA),
#        Data = ifelse(grepl("audio", model), "Audio", Data),
#        Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
cap = "Output from likelihood ratio tests comparing regression models that predict the effects of sibling number (binary, grouped and discrete variables) on vocabulary size. Month was included in each model as a fixed effect; subject was included as a random effect."
apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H",
font_size = "small")
# kable(table.sibling.model.output, "latex", booktabs=T, longtable=T,
#       caption=cap, digits=2, align="c")
siblings.model.summary <- summary(sibgroup.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`))
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$beta[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(sibgroup.model.summary.table$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
# siblings.model.summary.video <- summary(sibnumber.model.types_video)
#
# siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
#   as.data.frame %>%
#   rename(
#     "$b$" = "Estimate"
#     , "SE" = "Std. Error"
#     , "$df$" = "df"
#     , "$t$" = "t value"
#     , "$p$" = "Pr(>|t|)"
#   ) %>%
#   mutate(
#     Effect = papaja:::beautify_terms(rownames(.))
#   ) %>%
#   printnum(
#     digits = c(2, 2, 2, 2, 3, 0)
#     , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#     , zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#   ) %>%
#   select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
#   rename("betaval" = `$b$`)
#
# siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
#
# siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
#shapiro.test(SiblingsData$Total.words) # not normal
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
siblingnum.beta
siblings.model.summary <- summary(sibgroup.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`))
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta
siblings.model.summary.table$beta[2]
siblingnum.beta <- abs(siblingnum.beta*100)
siblingnum.beta
View(siblings.model.summary.table)
siblingnum.beta <- as.numeric(siblings.model.summary.table$Estimate[2])
siblingnum.beta
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`))
siblingnum.beta <- as.numeric(siblings.model.summary.table$Estimate[2])
siblingnum.beta <- abs(siblingnum.beta*100)
View(siblings.model.summary.table)
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null) # significant
summary(sibnumber.model) # for each increasing sibling, infants know 21% fewer words at 18m
wilcox.test(
x = subset(SiblingsData, month == 18 & Siblings6 == "0")$Total.words
, y = subset(SiblingsData, month == 18 & Siblings6 == "1")$Total.words
, paired = FALSE
) # NS
wilcox.test(
x = subset(SiblingsData, month == 18 & Siblings6 == "1")$Total.words
, y = subset(SiblingsData, month == 18 & Siblings6 == "2")$Total.words
, paired = FALSE
) # p=.06
wilcox.test(
x = subset(SiblingsData, month == 18 & Siblings6 == "2")$Total.words
, y = subset(SiblingsData, month == 18 & Siblings6 == "3")$Total.words
, paired = FALSE
) # NS
wilcox.test(
x = subset(SiblingsData, month == 18 & Siblings6 == "3")$Total.words
, y = subset(SiblingsData, month == 18 & Siblings6 == "4")$Total.words
, paired = FALSE
) # NS
speaker.type.model_siblings <- lmerTest::lmer(Log.n ~ SibGroup + Speaker + (1|subj),
data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type.model.null_siblings <- lmerTest::lmer(Log.n ~ Speaker + (1|subj),
data=subset(speaker.type, audio_video == "video"), REML=FALSE)
anova(speaker.type.model_siblings, speaker.type.model.null_siblings) # ns
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "0")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "4")$MeanN
, paired = FALSE
) # NS
speaker.type.MOT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "MOT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "0")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "1")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "2")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "1")$MeanN
, paired = FALSE
) # p<.01
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "2")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "3")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "3")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "4")$MeanN
, paired = FALSE
) # NS
object.presence.summary_siblings <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
object.presence.model_siblings <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj),
data=subset(object.presence, audio_video == "video"), REML=FALSE)
object.presence.model.null_siblings <- lmerTest::lmer(PC ~ month + (1|subj),
data=subset(object.presence, audio_video == "video"), REML=FALSE)
anova(object.presence.model_siblings, object.presence.model.null_siblings) # p<.001
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "0" & audio_video == "video")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1" & audio_video == "video")$mean.object
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "0")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1")$mean.object
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "2")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1")$mean.object
, paired = FALSE
) # p<.05
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "2")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "3")$mean.object
, paired = FALSE
) # NS
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "3")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "4")$mean.object
, paired = FALSE
) # NS
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Effect[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(sibgroup.model.summary.table$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
sibgroup1.beta
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Effect[2])
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Effect[2])
sibgroup1.beta
View(sibgroup.model.summary.table)
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Estimate[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup1.beta
sibgroup2.beta <- as.numeric(sibgroup.model.summary.table$Estimate[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
PCFAT
all.speakers <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.FAT <- speaker.summary %>%
filter(Speaker == "FAT") %>%
summarise(PCFAT = mean(PC.input),
SDFAT = sd(PC.input))
PC.SIB <- speaker.summary %>%
filter(Speaker == "SIBLING") %>%
summarise(PCSIB = mean(PC.input),
SDSIB = sd(PC.input))
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(SibGroup) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
PC.FAT
med.input
all.speakers <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.FAT <- speaker.summary %>%
filter(Speaker == "FAT") %>%
summarise(PCFAT = mean(PC.input),
SDFAT = sd(PC.input))
PC.SIB <- speaker.summary %>%
filter(Speaker == "SIBLING") %>%
summarise(PCSIB = mean(PC.input),
SDSIB = sd(PC.input))
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(SibGroup) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
mean.input.FAT
speaker.type %>% filter(Speaker == "FAT" & audio_video == "video")
noneonediff
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
summary(speaker.type.model)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
mutate(MeanN = mean(n)) %>%
filter(month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(SibGroup) %>%
summarise(meaninput = mean(n))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
noneonediff
noneonediff <- input.diff$meaninput[2] - input.diff$meaninput[1]
noneonediff
Figure.speaker.count <- ggplot(subset(speaker.type, Speaker %in% c("MOT", "FAT", "SIBLING", "Family.input") & audio_video == "video"),
aes(x=Speaker, y=n, color = Speaker)) +
stat_summary(fun.y = mean, geom = "point", aes(group = subj), shape = 1, size = 3, position = position_jitter(.1)) +
stat_summary(fun.data = "mean_cl_boot", colour = "red", shape = 17, size = 1) +
facet_wrap(~SibGroup, ncol=3) +
scale_x_discrete(limits = c("MOT", "FAT", "SIBLING", "Family.input"), labels = c("Mother", "Father", "Sibling", "Total input")) +
theme_bw(base_size = 15) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 0.5))
Figure.speaker.count
