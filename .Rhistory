summarise("Mean" = (mean(mean.PC.sib, na.rm=T)*100),
"SD" = (sd(mean.PC.sib, na.rm=T)*100)) %>%
rename(
"Sibling presence" = "sib.present"
)%>%
mutate(Variable = "% object presence in input, 10-17 months")
sib.presence.table_mean <- rbind(sib.presence.table.input, sib.presence.table.OP) %>%
dplyr::select(Variable, SibGroup, `Sibling presence`, Mean) %>%
pivot_wider(names_from = SibGroup, values_from = Mean) %>%
rename("1 m" = "One",
"2 m" = "2+")
sib.presence.table_sd <- rbind(sib.presence.table.input, sib.presence.table.OP) %>%
dplyr::select(Variable, SibGroup, `Sibling presence`, SD) %>%
pivot_wider(names_from = SibGroup, values_from = SD) %>%
rename("1 sd" = "One",
"2 sd" = "2+")
sib.presence.table.data.summary <- sib.presence.table_mean %>% left_join(sib.presence.table_sd) %>%
select(Variable, `Sibling presence`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
mutate(Variable = ifelse(`Sibling presence` == "Sibling present", "", Variable))
View(sib.presence.table.data.summary)
subset(modal_speaker, speaker == "GRM")$n
View(modal_speaker)
speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally()
speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally() %>%
ungroup() %>%
slice_max(n)
speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally() %>%
#ungroup() %>%
slice_max(n)
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally() %>%
#ungroup() %>%
slice_max(n) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MT2" = "MOT")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(caregiver,
"MOT" = "MT2")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(caregiver,
"MT2" = "MOT")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MT2" = "MOT")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MT2" = "MOT"))
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2"))
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2")) %>%
group_by(subj, speaker) %>%
tally() %>%
slice_max(n) %>%
group_by(speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2")) %>%
group_by(subj, speaker) %>%
tally()
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2")) %>%
group_by(subj, speaker)
modal_speaker <- speaker.type %>% filter(caregiver == "CG1"
#& speaker == "FAT"
& audio_video == "video") %>%
mutate(speaker = fct_recode(speaker,
"MOT" = "MT2")) %>%
group_by(subj, speaker)
other.speaker.data$PC.other.m
all.speaker.data <- speaker.type.household %>% left_join(speaker.type.all) %>%
filter(audio_video == "Video") %>%
group_by(subj, month) %>%
mutate(other.input = All.speakers - n,
prop.other = other.input/All.speakers) %>%
ungroup()
other.speaker.data <-
all.speaker.data %>%
filter(audio_video == "video") %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
other.speaker.data
other.speaker.data <-
all.speaker.data %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
other.speaker.data
all.speaker.data
all.speaker.data <- speaker.type.household %>% left_join(speaker.type.all) %>%
filter(audio_video == "Video") %>%
group_by(subj, month) %>%
mutate(other.input = All.speakers - n,
prop.other = other.input/All.speakers)
all.speaker.data
all.speaker.data <- speaker.type.household %>% left_join(speaker.type.all) %>%
filter(audio_video == "Video")
all.speaker.data <- speaker.type.household %>% left_join(speaker.type.all) %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
mutate(other.input = All.speakers - n,
prop.other = other.input/All.speakers) %>%
ungroup()
other.speaker.data <-
all.speaker.data %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
other.speaker.data
View(all.speaker.data)
View(table.data.summary.mean)
table.data.summary.mean <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, mean)
table.data.summary.mean <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, mean) %>%
spread(SibGroup, mean)
table.data.summary.mean <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, mean) %>%
spread(SibGroup, mean) %>%
rename("none m" = "None",
"1 m" = "One",
"2 m" = "2+")
table.data.summary <- table.data.summary.mean %>% left_join(table.data.summary.sd) %>%
select(Variable, `none m`, `none sd`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
mutate(Variable=factor(Variable, levels = c("Productive Vocabulary 18m (CDI)",
"N Input utterances, 10-17 months",
"% object presence in input, 10-17 months"))) %>%
arrange(Degree)
table.sibling.number <-
SiblingsData %>% filter(month == 18 & subj != 794) %>%
group_by(Siblings6, sex) %>% tally() %>%
spread(sex, n) %>%
replace(is.na(.), 0) %>%
rename(
"Female" = `F`,
"Male" = "M",
"n Siblings" = Siblings6
) %>%
mutate(Total = sum(Female + Male, na.rm=T, digits = 0)) %>%
adorn_totals("row")
table.data.summary.sibgroup <-
SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T))  %>%
mutate(Variable = "Productive Vocabulary 18m (CDI)") %>%
select(Variable, SibGroup, mean, sd)
table.data.summary.speaker <-
speaker.type %>%
filter(audio_video == "video"  &
caregiver == "FAMILY") %>%
group_by(subj, SibGroup) %>%
summarise(mean.n = mean(n)) %>%
ungroup() %>%
group_by(SibGroup) %>%
summarise(mean = mean(mean.n),
sd = sd(mean.n)) %>%
mutate(Variable = "N Input utterances, 10-17 months") %>%
select(Variable, SibGroup, mean, sd)
table.data.summary.object <-
object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, SibGroup) %>%
summarise(mean.PC = (mean(PC))) %>%
ungroup() %>%
group_by(SibGroup) %>%
summarise(mean = mean(mean.PC)*100,
sd = sd(mean.PC)*100) %>%
mutate(Variable = "% object presence in input, 10-17 months") %>%
select(Variable, SibGroup, mean, sd)
table.data.summary.mean <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, mean) %>%
spread(SibGroup, mean) %>%
rename("none m" = "None",
"1 m" = "One",
"2 m" = "2+")
table.data.summary.sd <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, sd) %>%
spread(SibGroup, sd) %>%
rename("none sd" = "None",
"1 sd" = "One",
"2 sd" = "2+")
table.data.summary <- table.data.summary.mean %>% left_join(table.data.summary.sd) %>%
select(Variable, `none m`, `none sd`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
mutate(Variable=factor(Variable, levels = c("Productive Vocabulary 18m (CDI)",
"N Input utterances, 10-17 months",
"% object presence in input, 10-17 months"))) %>%
arrange(Degree)
table.data.summary <- table.data.summary.mean %>% left_join(table.data.summary.sd) %>%
select(Variable, `none m`, `none sd`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
mutate(Variable=factor(Variable, levels = c("Productive Vocabulary 18m (CDI)",
"N Input utterances, 10-17 months",
"% object presence in input, 10-17 months"))) %>%
arrange(Variable)
View(table.data.summary)
sib.presence.table.data.summary
object.presence.summary$mean.object
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(ggcorrplot)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
speaker.type.no.twins <- speaker.type %>% filter(subj != 424)
speaker.type.model.null.no.twins.age <- lmerTest::lmer(Log.n ~ sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.age <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anove(speaker.type.model.null, speaker.type.model.null.no.twins.age)
anova(speaker.type.model.null, speaker.type.model.null.no.twins.age)
speaker.type.model.null.no.twins.age <- lmerTest::lmer(Log.n ~ sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.age <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.null.no.twins.age, speaker.type.model.no.twins.age)
speaker.type.model.null.no.twins.sex <- lmerTest::lmer(Log.n ~ month + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.ksex <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.sex <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.null.no.twins.sex, speaker.type.model.no.twins.sex) # sig effect for age
object.presence.model.no.twins.age <- lmerTest::lmer(PC ~ sex + (1|subj),
data=subset(object.presence.no.twins,  audio_video == "video"),
REML=FALSE)
object.presence.no.twins <- object.presence %>% filter(subj != 424)
object.presence.model.no.twins.age <- lmerTest::lmer(PC ~ sex + (1|subj),
data=subset(object.presence.no.twins,  audio_video == "video"),
REML=FALSE)
object.presence.model.no.twins.age.null <- lmerTest::lmer(PC ~ month + sex + (1|subj),
data=subset(object.presence.no.twins,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.no.twins.age, object.presence.model.no.twins.age.null)
object.presence.model.no.twins.sex <- lmerTest::lmer(PC ~ month + (1|subj),
data=subset(object.presence.no.twins,  audio_video == "video"),
REML=FALSE)
object.presence.model.no.twins.sex.null <- lmerTest::lmer(PC ~ month + sex + (1|subj),
data=subset(object.presence.no.twins,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.no.twins.sex, object.presence.model.no.twins.sex.null) # sig effect
age.test.input_anova
sex.test.input_anova
age.test.OP_anova
sex.test.OP_anova
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ 1 + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
age.test.input_anova
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ 1 + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
sex.test.input_anova
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ 1 + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
age.test.OP_anova
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ 1 + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
sex.test.OP_anova
speaker.type.model.null.no.twins.age <- lmerTest::lmer(Log.n ~ 1 + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.age <- lmerTest::lmer(Log.n ~ month + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.null.no.twins.age, speaker.type.model.no.twins.age) # sig effect for age
speaker.type.model.null.no.twins.sex <- lmerTest::lmer(Log.n ~ 1 + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.no.twins.sex <- lmerTest::lmer(Log.n ~ sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.null.no.twins.sex, speaker.type.model.no.twins.sex) # ns
object.presence.model.no.twins.age <- lmerTest::lmer(PC ~ 1 + (1|subj),
data=subset(object.presence.no.twins,  audio_video == "video"),
REML=FALSE)
object.presence.model.no.twins.age.null <- lmerTest::lmer(PC ~ month + (1|subj),
data=subset(object.presence.no.twins,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.no.twins.age, object.presence.model.no.twins.age.null) # sig effect
object.presence.model.no.twins.sex <- lmerTest::lmer(PC ~ 1 + (1|subj),
data=subset(object.presence.no.twins,  audio_video == "video"),
REML=FALSE)
object.presence.model.no.twins.sex.null <- lmerTest::lmer(PC ~ sex + (1|subj),
data=subset(object.presence.no.twins,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.no.twins.sex, object.presence.model.no.twins.sex.null) # ns
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.0.discrete,speaker.type.model.month.discrete) # significant
anova(speaker.type.model.0.discrete,speaker.type.model.sex.discrete) # not significant
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence,
audio_video == "video"),
REML=FALSE)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,
audio_video == "video"),
REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)# significant
anova(object.presence.model.null.discrete, object.presence.model.sex.discrete)  # not significant
speaker.type.red <- speaker.type %>% filter(subj != 738)
speaker.type.model.0.red <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type.red,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.age.red <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type.red,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
speaker.type.model.sex.red <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type.red,
audio_video == "video" &
caregiver == "FAMILY"),
REML=FALSE)
anova(speaker.type.model.0.red, speaker.type.model.age.red)
anova(speaker.type.model.0.red, speaker.type.model.sex.red) # significant
object.presence.red <- object.presence %>% filter(subj != 738)
object.presence.model.red.0 <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence.red,
audio_video == "video"),
REML=FALSE)
object.presence.model.red.age <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.red,
audio_video == "video"),
REML=FALSE)
object.presence.model.red.sex <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence.red,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.red.0, object.presence.model.red.age)
object.presence.model.null.red <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.red,
audio_video == "video"),
REML=FALSE)
anova(object.presence.model.red.0, object.presence.model.red.sex) # significan
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"),
mapping = aes(x=as.numeric(month), y=Log.n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (log-transformed)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .9),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "video"),
mapping = aes(x=as.numeric(month), y=Log.n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (log-transformed)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(0.05, 0.1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
