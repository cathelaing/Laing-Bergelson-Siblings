# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
shapiro.test(SiblingsData$tokens_video)
shapiro.test(SiblingsData$types_video)
## Demographics: Updated 14th February 2020 ##
# This is the main file containing all demographics data, incorporating some data from the demographics questionnaires at 6 and 18 months,
# mothers' PVT scores, and CDI data (productive vocabulary) from 6-18 months. THis also includes infant productions from audio and video recordings in the Seedlings corpus.
# This is the first script to generate when arranging data for the siblings analysis.
library(tidyverse)
library(forcats)
# Import data
PVT <- read_csv("Data/ParentPVT.csv") %>%
mutate(subj = factor(subj)) %>%
rename(PVTscore = uncorrected_standard_score) %>%
select(-ed_pvt)
CDI <- read_csv("Data/CDI.csv") %>%
mutate(subj = factor(subj)) %>%
rename(Total.words = CDI_TotalProd,
month = Month) %>%
mutate(Log.Totalwords = log(Total.words+1)) %>%
select(subj, month, Total.words, Log.Totalwords)
chidata <- read_feather("Data/basic_levels_Mar1518.feather") %>%   # Read in basic levels data and then join with CDI data to create a dataset of infant production
filter(speaker == 'CHI') %>%
dplyr::select(
basic_level,
audio_video,
subj,
month) %>%
mutate(basic_level = str_to_lower(basic_level),
subj = factor(subj))
CHIdata_tokens_video <- chidata %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
tally() %>%
rename("tokens_video" = "n") %>%
mutate(Log.tokens_video = log(tokens_video+1))
CHIdata_types_video <- chidata %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
summarise(types_video = n_distinct(basic_level)) %>%
mutate(Log.types_video = log(types_video+1))
CHIdata_tokens_audio <- chidata %>%
filter(audio_video == "audio") %>%
group_by(subj, month) %>%
tally() %>%
rename("tokens_audio" = "n") %>%
mutate(Log.tokens_audio = log(tokens_audio+1))
CHIdata_types_audio <- chidata %>%
filter(audio_video == "audio") %>%
group_by(subj, month) %>%
summarise(types_audio = n_distinct(basic_level)) %>%
mutate(Log.types_audio = log(types_audio+1))
ProductionData <- CDI %>%
left_join(CHIdata_tokens_video) %>%
left_join(CHIdata_types_video) %>%
left_join(CHIdata_tokens_audio) %>%
left_join(CHIdata_types_audio) %>%
mutate(tokens_video = ifelse(month < 18 & is.na(tokens_video), 0, tokens_video),
types_video = ifelse(month < 18 & is.na(types_video), 0, types_video),
tokens_audio = ifelse(month < 18 & is.na(tokens_audio), 0, tokens_audio),
types_audio = ifelse(month < 18 & is.na(types_audio), 0, types_audio))
## Demographics dataset: clean original data and join with PVT.csv
demographics <- read_csv("Data/demo_deid_cleaned.csv") %>%
mutate(subj = factor(subj)) %>%
dplyr::select(
subj,
sex,
maternal_education_18mos,
maternal_employment_18mos,
maternal_employment_hours_18mos,
paternal_employment_18mos,
paternal_employment_hours_18mos,
children_in_household_18mos_staff,
children_in_household_6mos_staff
) %>%
dplyr::rename(MOTedu = maternal_education_18mos,  ## rename columns
MOTwork = maternal_employment_18mos,
MOTworkhours = maternal_employment_hours_18mos,
FATwork = paternal_employment_18mos,
FATworkhours = paternal_employment_hours_18mos) %>%
mutate(MOTedu = factor(MOTedu),  # rename variables according to key in shared folder
MOTedu = fct_recode(MOTedu,
"High School" = "E",
"Some college" = "H",
"Assoc Degree" = "I",
"Bachelors Degree" = "J",
"Masters Degree" = "K",
"Doctorate" = "L"),
MOTwork = ifelse(MOTwork %in% c("H","I"),"Other", MOTwork),       # Three mothers not classed as working FT, PT or Home; class as 'Other' or PT, as relevant
MOTwork = ifelse(MOTwork == "B_E", "B", MOTwork),
MOTwork = factor(MOTwork),
MOTwork = fct_recode(MOTwork,
"Full-time" = "A",
"Part-time" = "B",
"Home" = "C"),
FATwork = ifelse(FATwork !="A" & FATwork !="B" & FATwork != "C", "Other",  # Recode fathers' work status so that fathers who don't work FT, PT,
FATwork),                                                      # or stay home (e.g. full-time students) are listed as 'other'
FATwork = factor(FATwork),
FATwork = fct_recode(FATwork,
"Full-time" = "A",
"Home" = "C"),
Siblings18 = children_in_household_18mos_staff - 1,   # new variable for sibling number at 18 months
Siblings6 = children_in_household_6mos_staff - 1,      # new variable for sibling number at 6 months
SibsYN = ifelse(Siblings6 == 0, "N", "Y"),             # binomial variable for slibling status (Y = siblings, N = No siblings)
SibGroup6 = factor(Siblings6),                          # new variable for sibling group, 0, 1, 2+ siblings
SibGroup6 = fct_recode(SibGroup6,
"None" = "0",
"One" = "1",
"2+" = "2",
"2+" = "3",
"2+" = "4"),
SibGroup18 = factor(Siblings18),                          # new variable for sibling group, 0, 1, 2+ siblings
SibGroup18 = fct_recode(SibGroup18,
"None" = "0",
"One" = "1",
"2+" = "2",
"2+" = "3",
"2+" = "4"),
# SibsDiscrete = factor(Siblings),                       # discrete variable for sibling number at 6 months
# SibsDiscrete = fct_recode(SibsDiscrete,
#                       "None" = "0",
#                       "One" = "1",
#                       "Two" = "2",
#                       "Three" = "3",
#                       "Four" = "4"),
MOTedulevel = fct_recode(MOTedu,
"1" = "High School",
"2" = "Some college",
"3" = "Assoc Degree",
"4" = "Bachelors Degree",
"5" = "Masters Degree",
"6" = "Doctorate"),
MOTedulevel = as.numeric(MOTedulevel)) %>%
dplyr::select(-children_in_household_6mos_staff, -children_in_household_18mos_staff) %>%
left_join(PVT)   # merge with PVT data
#write_csv(demographics, "Data/Demographics.csv", append = FALSE, col_names = TRUE)
SiblingsData <- demographics %>%
left_join(ProductionData) %>%
dplyr::select(                                      # re-order columns
subj,
month,
sex,
MOTedu,
MOTedulevel,
age_mom,
PVTscore,
MOTwork,
MOTworkhours,
FATwork,
FATworkhours,
SibsYN,
Siblings6,
Siblings18,
SibGroup6,
SibGroup18,
#SibsDiscrete,
Total.words,
Log.Totalwords,
tokens_video,
Log.tokens_video,
types_video,
Log.types_video,
tokens_audio,
Log.tokens_audio,
types_audio,
Log.types_audio)
# save
#write_csv(SiblingsData, "Data/SiblingsData.csv", append = FALSE, col_names = TRUE)
## Demographics: Updated 14th February 2020 ##
# This is the main file containing all demographics data, incorporating some data from the demographics questionnaires at 6 and 18 months,
# mothers' PVT scores, and CDI data (productive vocabulary) from 6-18 months. THis also includes infant productions from audio and video recordings in the Seedlings corpus.
# This is the first script to generate when arranging data for the siblings analysis.
library(tidyverse)
library(forcats)
# Import data
PVT <- read_csv("Data/ParentPVT.csv") %>%
mutate(subj = factor(subj)) %>%
rename(PVTscore = uncorrected_standard_score) %>%
select(-ed_pvt)
CDI <- read_csv("Data/CDI.csv") %>%
mutate(subj = factor(subj)) %>%
rename(Total.words = CDI_TotalProd,
month = Month) %>%
mutate(Log.Totalwords = log(Total.words+1)) %>%
select(subj, month, Total.words, Log.Totalwords)
chidata <- read_feather("Data/basic_levels_Mar1518.feather") %>%   # Read in basic levels data and then join with CDI data to create a dataset of infant production
filter(speaker == 'CHI') %>%
dplyr::select(
basic_level,
audio_video,
subj,
month) %>%
mutate(basic_level = str_to_lower(basic_level),
subj = factor(subj))
CHIdata_tokens_video <- chidata %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
tally() %>%
rename("tokens_video" = "n")
CHIdata_types_video <- chidata %>%
filter(audio_video == "video") %>%
group_by(subj, month) %>%
summarise(types_video = n_distinct(basic_level))
CHIdata_tokens_audio <- chidata %>%
filter(audio_video == "audio") %>%
group_by(subj, month) %>%
tally() %>%
rename("tokens_audio" = "n")
CHIdata_types_audio <- chidata %>%
filter(audio_video == "audio") %>%
group_by(subj, month) %>%
summarise(types_audio = n_distinct(basic_level))
ProductionData <- CDI %>%
left_join(CHIdata_tokens_video) %>%
left_join(CHIdata_types_video) %>%
left_join(CHIdata_tokens_audio) %>%
left_join(CHIdata_types_audio) %>%
mutate(tokens_video = ifelse(month < 18 & is.na(tokens_video), 0, tokens_video),
types_video = ifelse(month < 18 & is.na(types_video), 0, types_video),
tokens_audio = ifelse(month < 18 & is.na(tokens_audio), 0, tokens_audio),
types_audio = ifelse(month < 18 & is.na(types_audio), 0, types_audio))
## Demographics dataset: clean original data and join with PVT.csv
demographics <- read_csv("Data/demo_deid_cleaned.csv") %>%
mutate(subj = factor(subj)) %>%
dplyr::select(
subj,
sex,
maternal_education_18mos,
maternal_employment_18mos,
maternal_employment_hours_18mos,
paternal_employment_18mos,
paternal_employment_hours_18mos,
children_in_household_18mos_staff,
children_in_household_6mos_staff
) %>%
dplyr::rename(MOTedu = maternal_education_18mos,  ## rename columns
MOTwork = maternal_employment_18mos,
MOTworkhours = maternal_employment_hours_18mos,
FATwork = paternal_employment_18mos,
FATworkhours = paternal_employment_hours_18mos) %>%
mutate(MOTedu = factor(MOTedu),  # rename variables according to key in shared folder
MOTedu = fct_recode(MOTedu,
"High School" = "E",
"Some college" = "H",
"Assoc Degree" = "I",
"Bachelors Degree" = "J",
"Masters Degree" = "K",
"Doctorate" = "L"),
MOTwork = ifelse(MOTwork %in% c("H","I"),"Other", MOTwork),       # Three mothers not classed as working FT, PT or Home; class as 'Other' or PT, as relevant
MOTwork = ifelse(MOTwork == "B_E", "B", MOTwork),
MOTwork = factor(MOTwork),
MOTwork = fct_recode(MOTwork,
"Full-time" = "A",
"Part-time" = "B",
"Home" = "C"),
FATwork = ifelse(FATwork !="A" & FATwork !="B" & FATwork != "C", "Other",  # Recode fathers' work status so that fathers who don't work FT, PT,
FATwork),                                                      # or stay home (e.g. full-time students) are listed as 'other'
FATwork = factor(FATwork),
FATwork = fct_recode(FATwork,
"Full-time" = "A",
"Home" = "C"),
Siblings18 = children_in_household_18mos_staff - 1,   # new variable for sibling number at 18 months
Siblings6 = children_in_household_6mos_staff - 1,      # new variable for sibling number at 6 months
SibsYN = ifelse(Siblings6 == 0, "N", "Y"),             # binomial variable for slibling status (Y = siblings, N = No siblings)
SibGroup6 = factor(Siblings6),                          # new variable for sibling group, 0, 1, 2+ siblings
SibGroup6 = fct_recode(SibGroup6,
"None" = "0",
"One" = "1",
"2+" = "2",
"2+" = "3",
"2+" = "4"),
SibGroup18 = factor(Siblings18),                          # new variable for sibling group, 0, 1, 2+ siblings
SibGroup18 = fct_recode(SibGroup18,
"None" = "0",
"One" = "1",
"2+" = "2",
"2+" = "3",
"2+" = "4"),
# SibsDiscrete = factor(Siblings),                       # discrete variable for sibling number at 6 months
# SibsDiscrete = fct_recode(SibsDiscrete,
#                       "None" = "0",
#                       "One" = "1",
#                       "Two" = "2",
#                       "Three" = "3",
#                       "Four" = "4"),
MOTedulevel = fct_recode(MOTedu,
"1" = "High School",
"2" = "Some college",
"3" = "Assoc Degree",
"4" = "Bachelors Degree",
"5" = "Masters Degree",
"6" = "Doctorate"),
MOTedulevel = as.numeric(MOTedulevel)) %>%
dplyr::select(-children_in_household_6mos_staff, -children_in_household_18mos_staff) %>%
left_join(PVT)   # merge with PVT data
#write_csv(demographics, "Data/Demographics.csv", append = FALSE, col_names = TRUE)
SiblingsData <- demographics %>%
left_join(ProductionData) %>%
dplyr::select(                                      # re-order columns
subj,
month,
sex,
MOTedu,
MOTedulevel,
age_mom,
PVTscore,
MOTwork,
MOTworkhours,
FATwork,
FATworkhours,
SibsYN,
Siblings6,
Siblings18,
SibGroup6,
SibGroup18,
#SibsDiscrete,
Total.words,
Log.Totalwords,
tokens_video,
types_video,
tokens_audio,
types_audio)  %>%
mutate(Log.tokens_video = log(tokens_video+1),
Log.types_video = log(types_video+1),
Log.tokens_audio = log(tokens_audio+1),
Log.types_audio = log(types_audio+1))
# save
#write_csv(SiblingsData, "Data/SiblingsData.csv", append = FALSE, col_names = TRUE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
age.test.video.tokens <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.video.tokens.null <- lmer(Log.tokens_video ~ (1|subj), data = SiblingsData, REML=FALSE)
anova(age.test, age.test.null)
anova(age.test.video.tokens, age.test.video.tokens.null)
sibsYN.model <- lmerTest::lmer(Log.video_tokens ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.video_tokens ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibsYN.model, sibsYN.model.null)
sibsYN.model <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibsYN.model, sibsYN.model.null)
sibsYN.model <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibsYN.model, sibsYN.model.null)
sibsYN.model <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibsYN.model, sibsYN.model.null)
sibgroup.model <- lmerTest::lmer(Log.video_tokens ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model <- lmerTest::lmer(Log.tokens_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibgroup.model, sibgroup.model.null)
sibgroup.model <- lmerTest::lmer(Log.tokens_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibgroup.model, sibgroup.model.null)
sibgroup.model <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibgroup.model, sibgroup.model.null)
sibgroup.model <- lmerTest::lmer(Log.types_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibgroup.model, sibgroup.model.null)
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibgroup.model, sibgroup.model.null)
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
sibnumber.model <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
sibnumber.model <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
sibnumber.model <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
sibnumber.model <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
anova(sibnumber.model, sibnumber.model.null)
summary(sibnumber.model)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + (1|subj), data=speaker.type, REML=FALSE)
summary(speaker.type.model)
speaker.type.mean <- speaker.type %>% group_by(subj) %>%
mutate(MeanN = mean(n))
speaker.type %>% group_by(subj) %>%
mutate(MeanN = mean(n))
input.diff <-
speaker.type %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Total.input))
speaker.type %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Total.input))
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
speaker.type %>% group_by(SibGroup6) %>%
mutate(MeanN = mean(n))
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + age + (1|subj), data=speaker.type, REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + month + (1|subj), data=speaker.type, REML=FALSE)
summary(speaker.type.model)
View(speaker.type.mean)
View(speaker.type)
View(speaker.type)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
