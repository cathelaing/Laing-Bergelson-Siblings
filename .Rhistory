theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=Log.n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "MOT" | caregiver == "MT2"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "CG1" | caregiver == "CG2"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (raw data)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (raw data)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.95, .1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (raw data)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .99),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (raw data)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .95),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.input.age <- ggplot(data = subset(speaker.type, caregiver == "FAMILY"), mapping = aes(x=as.numeric(month), y=n)) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.2)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('Total number of words heard in input (raw data)') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
#scale_y_continuous(breaks = c(0, log(11), log(51), log(151), log(301)), labels = c(0, 10, 50, 150, 300)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(.05, .9),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.2))
Figure.input.age
Figure.objpresence.age <- ggplot(data = subset(object.presence, audio_video == "video"), mapping = aes(x=as.numeric(month), y=(PC*100))) +
geom_point(aes(colour = SibGroup), shape = 1, size = 3, position = position_dodge(.5)) +
geom_smooth(aes(colour = SibGroup, fill = SibGroup),size=2) +
ylab('% object presence') +
xlab('Age in Months') +
scale_x_continuous(breaks = c(6:18)) +
theme_bw() +
theme(axis.text=element_text(size=10),
text = element_text(size=10),
legend.position = c(0.05, 0.1),
legend.title = element_blank(),
legend.background = element_rect(fill='transparent')) +
stat_summary(fun.data=mean_cl_boot, geom="pointrange",
aes(fill = SibGroup), color = "black", shape = 24,
position = position_dodge(.5))
Figure.objpresence.age
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
summarise(mean_age = mean(age.diff.d))
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input)
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor(mean_input, age.diff.d, method = "spearman")) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup()
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor.test(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = rcorr(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = Hmisc::rcorr(mean_input, age.diff.d)) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(cor_older = cor.test(mean_input, age.diff.d)$estimate) # r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(estimate = cor.test(mean_input, age.diff.d)$estimate,
p_val = cor.test(x_val, y_val)$p.value)# r = -.03
speaker.type %>% filter(caregiver == "SIB" & audio_video == "video") %>%
group_by(subj) %>%
summarise(mean_input = mean(n)) %>%
left_join(sib.ages) %>%
group_by(subj, mean_input) %>%
#summarise(mean_age = mean(age.diff.d)) %>%
#filter(!(is.na(mean_age))) %>%
ungroup() %>%
summarise(estimate = cor.test(mean_input, age.diff.d)$estimate,
p_val = cor.test(mean_input, age.diff.d)$p.value)# r = -.03
speaker.type %>% filter(audio_video == "video") %>%
dplyr::select(subj, month, caregiver, n, SibGroup) %>%
group_by(subj, month)
speaker.type %>% filter(audio_video == "video") %>%
dplyr::select(subj, month, caregiver, n, SibGroup) %>%
group_by(subj, month) %>%
pivot_wider(names_from = caregiver, values_from = n)
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None")
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
filter(is.na(SIB))
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
# mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally()
sib.presence.summary <- sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
# mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally()
View(sib.presence.summary)
sib.presence.summary <- sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally()
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
#mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally() %>%
pivot_wider(names_from = sib.present, values_from = n) %>%
mutate(`Sibling not present` = ifelse(is.na(`Sibling not present`), 0, `Sibling not present`))
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
#mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally() %>%
pivot_wider(names_from = sib.present, values_from = n) %>%
mutate(`Sibling not present` = ifelse(is.na(`Sibling not present`), 0, `Sibling not present`)) %>%
summarise(PC.present = `Sibling present`/(`Sibling not present` + `Sibling present`),
total.present = sum(`Sibling present`))
sib.presence %>%
filter(audio_video == "video" & SibGroup != "None") %>%
#mutate(sib.present = ifelse(is.na(SIB), "Sibling not present", "Sibling present")) %>%
group_by(subj, sib.present) %>%
tally() %>%
pivot_wider(names_from = sib.present, values_from = n) %>%
mutate(`Sibling not present` = ifelse(is.na(`Sibling not present`), 0, `Sibling not present`)) %>%
summarise(PC.present = `Sibling present`/(`Sibling not present` + `Sibling present`),
total.present = sum(`Sibling present`)) %>%
ungroup() %>%
summarise(mean.present = mean(PC.present),
sd.present = sd(PC.present),
total.present = sum(total.present))
ProductionData %>%
filter(month == 17) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
#cl2eb: the wilcox tests above (testing CDI only) go on month 18 only, so I took month 17 as the last month where we have CDI and recorded data.
# i'd probably stick to just types if they're all pretty similar fwiw, more analogous to CDI
measures.corrs <- ProductionData %>%
filter(month == 17) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
measures.corrs
ProductionData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
View(ProductionData)
View(SiblingsData)
SiblingsData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
#cl2eb: the wilcox tests above (testing CDI only) go on month 18 only, so I took month 17 as the last month where we have CDI and recorded data.
# i'd probably stick to just types if they're all pretty similar fwiw, more analogous to CDI
measures.corrs <- SiblingsData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs", method = "spearman")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs", method = "spearman")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs", method = "spearman")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs", method = "spearman")$p.value)
measures.corrs
#cl2eb: the wilcox tests above (testing CDI only) go on month 18 only, so I took month 17 as the last month where we have CDI and recorded data.
# i'd probably stick to just types if they're all pretty similar fwiw, more analogous to CDI
measures.corrs <- SiblingsData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
measures.corrs
(max(subset(measures.corrs, SibGroup != "2+")$cdi_vid_est))
printp(min(subset(measures.corrs, SibGroup != "2+")$cdi_vid_pval))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(min(value))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value = min(value))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval), name = "names")
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval), name = "names2")
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
ungroup() %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval), name = "names2")
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename(value = est)
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("value" = "est")
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value")
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs2 <- measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
sibgroup.model <- lmerTest::lmer(Log.types_audio ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
sibgroup_anova
summary(sibgroup.model)
sibgroup.model <- lmerTest::lmer(Log.tokens_audio ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
sibgroup_anova
summary(sibgroup.model)
library(tidyverse)
library(blabr)
install.packages("blabr")
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(pander)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
# for converting subject numbers, NOT PUSHING this file for data anonymity
random_subjnums <- read_csv("Data/random_subnums.csv")
#grabbing type and token counts overall and for CHI
seedlings_nouns <- get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
filter(audio_video=="video")
library(blabr)
install.packages("blabr")
install.packages('cli')
devtools::install_github("BergelsonLab/blabr")
1
seedlings_nouns <- get_seedlings_nouns('v1.0.0')
library(blabr)
devtools::install_github("BergelsonLab/blabr")
devtools::install_github("BergelsonLab/blabr")
devtools::install_github("BergelsonLab/blabr")
library(blabr)
install.packages("tidyverse")
library(tidyverse)
library(papaja)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
