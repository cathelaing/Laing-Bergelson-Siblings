speaker.type <- speaker.type %>% filter(subj != 351 & month > 9)
object.presence <- object.presence %>% filter(subj != 351 & month > 9)
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
knitr::opts_chunk$set(echo = TRUE)
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
speaker.type_r2 <- r2.corr.mer(speaker.type.model)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence_r2 <- r2.corr.mer(object.presence.model)
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.models_r2 <- rbind(speaker.type_r2, object.presence_r2)
table.input.model.output <- rbind(speaker.type_anova, object.presence.anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`) %>%
cbind(input.models_r2) %>%
rename("R2" = "input.models_r2")
row.names(table.input.model.output) <- NULL
input.variables.model.summaries.audio <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Results of nested model comparisons testing the effect of sibling group on caregiver input/object presence in the audio data. Linear mixed-effects regression models compared our two input measures (object words produced in caregiver input  and object presence) in relation to sibling group (0 vs. 1 vs. 2+) in the audio data. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c",
col.names=c("Model", "Df", "Chisq", "p value", "$R^{2}$"))
cap = "Full model outputs from two linear mixed effects regression models comparing our input measures (object words produced in caregiver input and object presence) in relation to sibling group (0 vs. 1 vs. 2+), for the audio data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.audio, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speaker.type.no.twins <- speaker.type %>% filter(subj != 424)
speaker.type.model.null.no.twins <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.no.twins <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.no.twins <- anova(speaker.type.model.no.twins, speaker.type.model.null.no.twins) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.notwins_r2 <- r2.corr.mer(speaker.type.model.no.twins)
input.model.summary.no.twins <- summary(speaker.type.model.no.twins)
input.model.summary.table.no.twins <- input.model.summary.no.twins$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.no.twins <- object.presence %>% filter(subj != 424)
object.presence.model.no.twins <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence.no.twins,  audio_video == "video"), REML=FALSE)
object.presence.model.null.no.twins <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.no.twins,  audio_video == "video"), REML=FALSE)
object.presence.anova.no.twins <- anova(object.presence.model.no.twins, object.presence.model.null.no.twins) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.notwins_r2 <- r2.corr.mer(object.presence.model.no.twins)
object.presence.model.summary.no.twins <- summary(object.presence.model.no.twins)
table.object.presence.model.no.twins.summary <- object.presence.model.summary.no.twins$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.no.twins <- rbind(input.model.summary.table.no.twins, table.object.presence.model.no.twins.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
input.models.notwins_r2 <- rbind(speaker.notwins_r2, object.notwins_r2)
table.input.model.output.no.twins <- rbind(speaker.type_anova.no.twins, object.presence.anova.no.twins
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`)
input.models.red_r2 <- rbind(speaker.red_r2, object.red_r2)
speaker.red_r2 <- r2.corr.mer(speaker.type.model.red)
speaker.type.model.red <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(ggcorrplot)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & month > 9)
CDI <- CDI %>% filter(subj != 351 & month > 9)
speaker.type <- speaker.type %>% filter(subj != 351 & month > 9)
object.presence <- object.presence %>% filter(subj != 351 & month > 9)
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
knitr::opts_chunk$set(echo = TRUE)
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
speaker.type_r2 <- r2.corr.mer(speaker.type.model)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence_r2 <- r2.corr.mer(object.presence.model)
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.models_r2 <- rbind(speaker.type_r2, object.presence_r2)
table.input.model.output <- rbind(speaker.type_anova, object.presence.anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`) %>%
cbind(input.models_r2) %>%
rename("R2" = "input.models_r2")
row.names(table.input.model.output) <- NULL
input.variables.model.summaries.audio <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Results of nested model comparisons testing the effect of sibling group on caregiver input/object presence in the audio data. Linear mixed-effects regression models compared our two input measures (object words produced in caregiver input  and object presence) in relation to sibling group (0 vs. 1 vs. 2+) in the audio data. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c",
col.names=c("Model", "Df", "Chisq", "p value", "$R^{2}$"))
cap = "Full model outputs from two linear mixed effects regression models comparing our input measures (object words produced in caregiver input and object presence) in relation to sibling group (0 vs. 1 vs. 2+), for the audio data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.audio, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speaker.type.no.twins <- speaker.type %>% filter(subj != 424)
speaker.type.model.null.no.twins <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.no.twins <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj),
data=subset(speaker.type.no.twins, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.no.twins <- anova(speaker.type.model.no.twins, speaker.type.model.null.no.twins) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.notwins_r2 <- r2.corr.mer(speaker.type.model.no.twins)
input.model.summary.no.twins <- summary(speaker.type.model.no.twins)
input.model.summary.table.no.twins <- input.model.summary.no.twins$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.no.twins <- object.presence %>% filter(subj != 424)
object.presence.model.no.twins <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence.no.twins,  audio_video == "video"), REML=FALSE)
object.presence.model.null.no.twins <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.no.twins,  audio_video == "video"), REML=FALSE)
object.presence.anova.no.twins <- anova(object.presence.model.no.twins, object.presence.model.null.no.twins) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.notwins_r2 <- r2.corr.mer(object.presence.model.no.twins)
object.presence.model.summary.no.twins <- summary(object.presence.model.no.twins)
table.object.presence.model.no.twins.summary <- object.presence.model.summary.no.twins$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.no.twins <- rbind(input.model.summary.table.no.twins, table.object.presence.model.no.twins.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
input.models.notwins_r2 <- rbind(speaker.notwins_r2, object.notwins_r2)
table.input.model.output.no.twins <- rbind(speaker.type_anova.no.twins, object.presence.anova.no.twins
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`) %>%
cbind(input.models.notwins_r2) %>%
rename("R2" = "input.models.notwins_r2")
row.names(table.input.model.output.no.twins) <- NULL
input.variables.model.summaries.no.twins <- rbind(input.model.summary.table.no.twins, table.object.presence.model.no.twins.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Results of nested model comparisons testing the effect of sibling group on caregiver input/object presence in the video data, with both dizygotic twins removed from our sample (n=42). Linear mixed-effects regression models compared our two input measures (object words produced in caregiver input  and object presence) in relation to sibling group. Age in months was included as a fixed effect for both models; sex was included for caregiver input only following model structures in the main analysis. Subject was included as a random effect."
kable(table.input.model.output.no.twins, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c",
col.names=c("Model", "Df", "Chisq", "p value", "$R^{2}$"))
cap = "Full model output from linear mixed effects regression models comparing our two input measures (object words produced in caregiver input and object presence) over time in relation to sibling group, with both dizygotic twins removed from our sample (n=42). Age in months was included as a fixed effect in both models, sex was included in the model testing caregiver inpit; subject was included as a random effect."
kable(input.variables.model.summaries.no.twins, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(5, hline_after = T)
speakers.sessions <- speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
group_by(speaker, caregiver, month) %>% tally() %>% summarise(total = sum(n)) %>%
mutate(speaker = str_to_title(speaker)) %>%
mutate(Speaker = ifelse(speaker == "Fat", "Father", speaker),
Speaker = ifelse(speaker %in% c("Mot", "Mt2"), "Mother", Speaker),
Speaker = ifelse(speaker == "Grm", "Grandmother", Speaker),
Speaker = ifelse(speaker == "Grp", "Grandfather", Speaker),
Speaker = ifelse(speaker == "Mot+Fat", "Both parents", Speaker),
Speaker = as.factor(Speaker)) %>%
pivot_wider(names_from = caregiver, values_from = total) %>%
ungroup() %>%
dplyr::select(-speaker) %>%
group_by(Speaker) %>%
summarise(`Caregiver 1` = sum(CG1,na.rm = T),
`Caregiver 2` = sum(CG2,na.rm = T)) %>%
arrange(desc(`Caregiver 1`))
total.sessionsCG1 <- sum(speakers.sessions$`Caregiver 1`) # 344
total.sessionsCG2 <- sum(speakers.sessions$`Caregiver 2`) # 146
# data with 2 mothers - both are counted in the mother row
# number of video sessions (from a total of )
#43*8 # 344 sessions recorded in total
#sum(speakers.sessions$`Caregiver 2`) # 344
#sum(speakers.sessions$`Caregiver 2`) # 146
# speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
#   group_by(subj, caregiver, month) %>%
#   tally() %>% ungroup() %>%
#   group_by(subj) %>%
#   tally() %>%
#   mutate(singlecg = 16-n) %>%
#   filter(n<16) %>%
#   summarise(missing_cg = sum(singlecg))
# 198 videos with just 1 caregiver
#344-198
#198+146 = 344
cap = "Numer of sessions in which each adult speaker is one of the two main caregivers. There were 344 hour-long video sessions in total, and two caregivers were present in 146 of these."
kable(speakers.sessions, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, align="c")
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, MOTworkhours, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"Maternal work hours" = "MOTworkhours",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
testRes = cor.mtest(corr.matrix, conf.level = 0.95)
cor.res <- cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman")
#mat.corr.matrix <- corrplot(corr.matrix, method = "number")
#par(cex = 1.2)
#ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, insig = 'pch')
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE,
type = "lower",
diag = FALSE)
#corrplot(corr.matrix, method = "number", conf.level = 0.95)
cap <- sprintf("Correlation matrix showing Spearman's correlation coefficients between maternal factors (age and education), number of siblings, and number of words reported to be produced by the child at age 18 months. Colours and circles represent direction and strength of correlation, whereby bolder colours and larger circles indicate a stronger correlation between variables; blue and red indicate positive/negative correlations, respectively. Asterisk indicatea significant *p* value at *p*<.05.")
par(cex = 1.2)
#ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower")
cap <- sprintf("Correlation matrix showing Spearman's correlation coefficients between maternal factors (age and education), number of siblings, and number of words reported to be produced by the child at age 18 months. Colours represent strength of correlation, whereby bolder colours indicate a stronger correlation between variables.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
#anova(speaker.type.model.0.discrete,speaker.type.model.month.discrete) # significant
#anova(speaker.type.model.0.discrete,speaker.type.model.sex.discrete) # not significant
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.discrete_r2 <- r2.corr.mer(speaker.type.model.discrete)
input.model.summary.discrete <- summary(speaker.type.model.discrete)
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"n Siblings" = "Siblings6")) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.discrete.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
object.presence.model.discrete <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)# significant
anova(object.presence.model.null.discrete, object.presence.model.sex.discrete)  # not significant
object.presence.anova.discrete <- anova(object.presence.model.discrete, object.presence.model.null.discrete) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.discrete_r2 <- r2.corr.mer(object.presence.model.discrete)
object.presence.model.summary.discrete <- summary(object.presence.model.discrete)
table.object.presence.model.discrete.summary <- object.presence.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"n Siblings" = "Siblings6"),
`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.discrete <- rbind(input.model.summary.table.discrete, table.object.presence.model.discrete.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
input.models.discrete_r2 <- rbind(speaker.discrete_r2, object.discrete_r2)
table.input.model.output.discrete <- rbind(speaker.type_anova.discrete, object.presence.anova.discrete
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`) %>%
cbind(input.models.discrete_r2) %>%
rename("R2" = "input.models.discrete_r2")
row.names(table.input.model.output.discrete) <- NULL
cap = "Results of nested model comparisons testing the effect of discrete sibling number on caregiver input/object presence in the video data. Linear mixed-effects regression models compared our two input measures (object words produced in caregiver input  and object presence) in relation to sibling number (R = 0-4). Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c",
col.names=c("Model", "Df", "Chisq", "p value", "$R^{2}$"))
cap = "Full model outputs from two linear mixed effects regression models comparing our input measures (object words produced in caregiver input and object presence) in relation to discrete sibling number (R = 0-4), for the video data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.discrete, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(3, hline_after = T)
speaker.type.red <- speaker.type %>% filter(subj != 738)
speaker.type.model.null.red <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.red <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type.red, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.red <- anova(speaker.type.model.red, speaker.type.model.null.red) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.red_r2 <- r2.corr.mer(speaker.type.model.red)
input.model.summary.red <- summary(speaker.type.model.red)
input.model.summary.table.red <- input.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
```{r object.presence model one infant removed, include=FALSE}
object.presence.red <- object.presence %>% filter(subj != 738)
object.presence.model.red <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.model.null.red <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence.red,  audio_video == "video"), REML=FALSE)
object.presence.anova.red <- anova(object.presence.model.red, object.presence.model.null.red) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.red_r2 <- r2.corr.mer(object.presence.model.red)
object.presence.model.summary.red <- summary(object.presence.model.red)
table.object.presence.model.red.summary <- object.presence.model.summary.red$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
```{r model outputs - one infant removed, include = FALSE}
table.input.model.output.discrete <- rbind(speaker.type_anova.discrete, object.presence.anova.discrete
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence"),
`p value` = scales::pvalue(`p value`)) %>%
select(Model, Df, Chisq, `p value`) %>%
cbind(input.models.discrete_r2) %>%
rename("R2" = "input.models.discrete_r2")
input.models.red_r2 <- rbind(speaker.red_r2, object.red_r2)
table.input.model.output.red <- rbind(speaker.type_anova.red, object.presence.anova.red
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`) %>%
mutate(`p value` = scales::pvalue(`p value`)) %>%
cbind(input.models.red_r2) %>%
rename("R2" = "input.models.red_r2")
row.names(table.input.model.output.red) <- NULL
input.variables.model.summaries.red <- rbind(input.model.summary.table.red, table.object.presence.model.red.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
```{r Figure-cdi-types, echo=FALSE, fig.cap=cap, fig.pos='H', message=FALSE, warning=FALSE, fig.width = 2}
