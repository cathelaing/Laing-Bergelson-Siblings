# In overall vocabulary development
CDI %>% #filter(month == 18) %>%
group_by(month) %>%
mutate(outlier_cutoff3sd = 3*sd(Total.words, na.rm=T),
mean_month = mean(Total.words, na.rm=T),
outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE) %>%
#filter(month>9)# this doesn't work bc month is a character but should be a number
filter(!month %in% c("06","07","08","09"))
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_anova
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
sibgroup_anova
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% %>% filter(subj != 351)
demographics <- demographics %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibnums
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
sibage
View(sib.ages)
sib.ages <- sib.ages %>% filter(subj != 351)
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
sibage
View(CDI)
missing_CDI <- CDI %>% group_by(subj) %>% filter(is.na(Total.words))
missing_CDI
missing_CDI <- CDI %>% group_by(subj) %>% filter(is.na(Total.words)) %>% tally()
missing_CDI
n_missing <- missing_CDI %>% tally()
n_missing
total_missing <- missing_CDI %>% summarise(sum(n))
total_missing
missing_CDI
high_missing <- missing_CDI %>% filter(max(n))
high_missing <- missing_CDI %>% filter(n == max(n))
high_missing
high_missing <- missing_CDI %>% filter(n == max(n)) %>% tally()
high_missing
CDI %>% tally()
13*43
low_missing <- missing_CDI %>% filter(n == min(n))
low_missing
low_missing <- missing_CDI %>% filter(n == min(n)) %>% tally()
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
source("DataGathering.R")
cor.age
speaker.type.model_siblings <- lmerTest::lmer(Log.n ~ Siblings6 + month + sex + (1|subj),
data=subset(speaker.type, audio_video == "video"), REML=FALSE)
speaker.type.model.null_siblings <- lmerTest::lmer(Log.n ~ month + sex + (1|subj),
data=subset(speaker.type, audio_video == "video"), REML=FALSE)
anova(speaker.type.model_siblings, speaker.type.model.null_siblings) # ns
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "0")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "1")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "2")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.SIB, Siblings6 == "3")$MeanN
, y = subset(speaker.type.SIB, Siblings6 == "4")$MeanN
, paired = FALSE
) # NS
speaker.type.MOT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "MOT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "0")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "1")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "2")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "1")$MeanN
, paired = FALSE
) # p<.01
wilcox.test(
x = subset(speaker.type.MOT, Siblings6 == "2")$MeanN
, y = subset(speaker.type.MOT, Siblings6 == "3")$MeanN
, paired = FALSE
) # NS
object.presence.model_siblings <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj),
data=subset(object.presence, audio_video == "video"), REML=FALSE)
object.presence.model.null_siblings <- lmerTest::lmer(PC ~ month + (1|subj),
data=subset(object.presence, audio_video == "video"), REML=FALSE)
anova(object.presence.model_siblings, object.presence.model.null_siblings) # p<.001
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "0")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1")$mean.object
, paired = FALSE
) # p<.001
object.presence.summary_siblings <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "0")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1")$mean.object
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "2")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "1")$mean.object
, paired = FALSE
) # p<.05
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "2")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "3")$mean.object
, paired = FALSE
) # NS
wilcox.test(
x = subset(object.presence.summary_siblings, Siblings6 == "3")$mean.object
, y = subset(object.presence.summary_siblings, Siblings6 == "4")$mean.object
, paired = FALSE
) # NS
View(object.presence.unsure)
object.presence.unsure <- sibsdata %>%
filter(speaker %in% c("MOT", "FAT", "SIBLING"))  %>%    # Remove other speakers from data
filter(object_present %in%
c("y", "n", "u")) %>%
group_by(subj, month, audio_video, object_present) %>%
tally() %>%
spread(object_present, n) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
mutate(Total = n + y + u,
PCu = u/Total) %>%
filter(audio_video == "video")
object.presence.unsure <- sibsdata %>%
filter(speaker %in% c("MOT", "FAT", "SIBLING"))  %>%    # Remove other speakers from data
filter(object_present %in%
c("y", "n", "u")) %>%
group_by(subj, month, audio_video, object_present) %>%
tally() %>%
spread(object_present, n) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
mutate(Total = n + y + u,
PCu = u/Total) %>%
filter(audio_video == "video") %>%
summarise(totalu = sum(u),
meanu = (mean(PCu))*100)
noneonediff
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
missing_CDI <- CDI %>% group_by(subj) %>% filter(is.na(Total.words)) %>% tally()
n_missing <- missing_CDI %>% tally()
total_missing <- missing_CDI %>% summarise(sum(n))
high_missing <- missing_CDI %>% filter(n == max(n)) %>% tally()
low_missing <- missing_CDI %>% filter(n == min(n)) %>% tally()
other.speaker.data <-
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
nCDI18 <- SiblingsData %>% filter(month == 18 & !is.na(Total.words)) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(!is.na(Total.words)) %>%
group_by(month) %>%
mutate(outlier_cutoff3sd = 3*sd(Total.words, na.rm=T),
mean_month = mean(Total.words, na.rm=T),
outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE) %>%
filter(month>9)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(!month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(!month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(!month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(!month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0,
#placement = "H",
font_size = "small")
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.sex <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + sex +(1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
sibsYN_anova.sex <- anova(sibsYN.model, sibsYN.model.sex) # ns.
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.sex <- lmerTest::lmer(Log.Totalwords ~ SibGroup + month + sex + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
sibgroup_anova.sex <- anova(sibgroup.model, sibgroup.model.sex) # ns
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.sex <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + sex + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
sibnumber_anova.sex <- anova(sibnumber.model, sibnumber.model.sex) # ns
sibs.anova.sex.table <- rbind(sibnumber_anova.sex, sibgroup_anova.sex, sibsYN_anova.sex)
min.pval.sex <- min(sibs.anova.sex.table$`Pr(>Chisq)`, na.rm=T)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
cap = "Output from likelihood ratio tests comparing regression models that predict the effects of sibling number (binary, grouped and discrete variables) on vocabulary size. Month was included in each model as a fixed effect; subject was included as a random effect."
apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H",
font_size = "small")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`))
siblingnum.beta <- as.numeric(siblings.model.summary.table$Estimate[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup1.beta <- as.numeric(sibgroup.model.summary.table$Estimate[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(sibgroup.model.summary.table$Estimate[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
#shapiro.test(SiblingsData$Total.words) # not normal
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup == "One")$Total.words
, paired = FALSE
)
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included as a fixed effect; subject was included as a random effect."
kable(sibgroup.model.summary.table, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
par(cex = 1.2)
Figure.SibGroup
cap <- sprintf("Reported productive vocabulary acquisition (CDI) over time. Colors denote sibling group; line with colored confidence band reflects local estimator (loess) fit over individual infants’ vocabulary at each month. Triangles indicate mean with bootstrapped CIs computed over each month's data. Points (jittered horizontally) show individual infants' vocabulary size at each month. Y-axis utilizes log-transformed vertical spacing for visual clarity.")
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, Speaker == "Family.input" & audio_video == "video"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "Family.input" & audio_video == "video"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
age.test.input_df <- age.test.input_anova$`Df`[2]
age.test.input_chisq <- age.test.input_anova$Chisq[2]
age.test.input_p.value <- age.test.input_anova$pval[2]
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, Speaker == "Family.input" & audio_video == "video"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "Family.input" & audio_video == "video"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # p<.05
rename("pval" = `Pr(>Chisq)`)
sex.test.input_df <- sex.test.input_anova$`Df`[2]
sex.test.input_chisq <- sex.test.input_anova$Chisq[2]
sex.test.input_p.value <- sex.test.input_anova$pval[2]
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
age.test.OP_df <- age.test.OP_anova$`Df`[2]
age.test.OP_chisq <- age.test.OP_anova$Chisq[2]
age.test.OP_p.value <- age.test.OP_anova$pval[2]
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "video"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
all.speakers <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.FAT <- speaker.summary %>%
filter(Speaker == "FAT") %>%
summarise(PCFAT = mean(PC.input),
SDFAT = sd(PC.input))
PC.SIB <- speaker.summary %>%
filter(Speaker == "SIBLING") %>%
summarise(PCSIB = mean(PC.input),
SDSIB = sd(PC.input))
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(SibGroup) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
cap = "Data summary of our two input measures and reported vocabulary size at 18 months."
kable(table.data.summary, "latex", booktabs = T, caption = cap, digits = 2, align = "c", col.names = NULL)  %>%
add_header_above(c("Variable" = 1, "Mean" = 1, "SD" = 1, "Mean" = 1, "SD" = 1, "Mean" = 1, "SD" = 1)) %>%
add_header_above(c(" " = 1, "No siblings" = 2, "1 sibling" = 2, "2+ siblings" = 2))
par(cex = 1.2)
Figure.speaker.count
cap <- sprintf("Mean number of words produced by Mothers, Fathers and Siblings, as well as total family input (mother + father + sibling(s)), across sessions recorded between 10-17 months. Circles represent values for individual infants; red triangles show group means.")
noneonediff
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% #p<.001
rename("pval" = `Pr(>Chisq)`)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
mutate(MeanN = mean(n)) %>%
filter(month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(SibGroup) %>%
summarise(meaninput = mean(n))
noneonediff <- input.diff$meaninput[2] - input.diff$meaninput[1]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
noneonediff
abs(noneonediff)
View(input.diff)
