#   ) %>%
#   printnum(
#     digits = c(2, 2, 2, 2, 3, 0)
#     , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#     , zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#   ) %>%
#   select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
#   rename("betaval" = `$b$`)
#
# siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
#
# siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
siblings.model.summary.table
#apa_table(siblings.model.summary.table, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
col.names = c("Effect", "\\textit{b}", "Std. Error", "\\textit{t value]", "df", "\\textit{pvalue}"),
caption=cap, digits=2, align="c")
siblings.model.summary.table
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included as a fixed effect; subject was included as a random effect."
#apa_table(siblings.model.summary.table, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
escape=FALSE,
col.names = c("Effect", "\\textit{b}", "Std. Error", "\\textit{t value]", "df", "\\textit{pvalue}"),
caption=cap, digits=2, align="c")
siblings.model.summary.table
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
other.speaker.data <-
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
# age
age.test.cdi <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi.null <- lmer(Log.Totalwords ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi_anova <- anova(age.test.cdi, age.test.cdi.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
age.test_df <- age.test.cdi_anova$`Chi Df`[2]
age.test_chisq <- age.test.cdi_anova$Chisq[2]
age.test_p.value <- age.test.cdi_anova$pval[2]
age.test.video.tokens <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.video.tokens.null <- lmer(Log.tokens_video ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test_anova <- anova(age.test.video.tokens, age.test.video.tokens.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.cdi <- lmer(Log.Totalwords ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.cdi.null <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.cdi, sex.test.cdi.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
sex.test_df <- sex.test_anova$`Chi Df`[2]
sex.test_chisq <- sex.test_anova$Chisq[2]
sex.test_p.value <- sex.test_anova$pval[2]
sex.test.video.tokens <- lmer(Log.tokens_video ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.video.tokens.null <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.video.tokens, sex.test.video.tokens.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
cor.age <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
cor.edu <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.edu.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$Total.words
, method = "spearman"
)
cor.age.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup6) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup6, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
# # Checking consistency with words produced in recordings
#
# # Tokens - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_video <- anova(sibsYN.model.tokens_video, sibsYN.model.tokens_video.null) # NS
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_video <- anova(sibgroup.model.tokens_video, sibgroup.model.tokens_video.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_video <- anova(sibnumber.model.tokens_video, sibnumber.model.tokens_video.null) # NS
#
# # Types - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_video <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_video <- anova(sibsYN.model.types_video, sibsYN.model.types_video.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_video <- lmerTest::lmer(Log.types_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_video <- anova(sibgroup.model.types_video, sibgroup.model.types_video.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_video <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_video <- anova(sibnumber.model.types_video, sibnumber.model.types_video.null) # NS
#
# # Tokens - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_audio <- anova(sibsYN.model.tokens_audio, sibsYN.model.tokens_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_audio <- anova(sibgroup.model.tokens_audio, sibgroup.model.tokens_audio.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_audio <- anova(sibnumber.model.tokens_audio, sibnumber.model.tokens_audio.null) # p=.05
#
# # Types - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_audio <- anova(sibsYN.model.types_audio, sibsYN.model.types_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
#sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
#  sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
#  sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
#   sibsYN.types_anova_video, sibsYN.types_anova_audio,
#   sibgroup.types_anova_video, sibgroup.types_anova_audio,
#    sibnumber.types_anova_video, sibnumber.types_anova_audio
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
# mutate(Count = ifelse(model == "sibsYN.model", "CDI", ""),
#                 Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
#        Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
#        Data = ifelse(grepl("video", model), "Video", NA),
#        Data = ifelse(grepl("audio", model), "Audio", Data),
#        Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
cap = "Output from likelihood ratio tests comparing regression models that predict the effects of sibling number (binary, grouped and discrete variables) on vocabulary size. Month was included in each model as a fixed effect; subject was included as a random effect."
apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, #placement = "H",
font_size = "small")
# kable(table.sibling.model.output, "latex", booktabs=T, longtable=T,
#       caption=cap, digits=2, align="c")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame
View(siblings.model.summary.table)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)"
)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)")
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE))
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0))
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 3))
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
install.packages("scales")
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
table.sibgroup.model.summary <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#  digits = c(2, 2, 2, 2, 3, 0)
#  , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
#  select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
siblings.model.summary <- summary(sibgroup.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
siblings.model.summary <- summary(sibgroup.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
sibgroup.model.summary.table <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename("p" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(p = scales::pvalue(p))
sibgroup1.beta <- as.numeric(table.sibgroup.model.summary$beta[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(table.sibgroup.model.summary$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
View(sibgroup.model.summary.table)
table.data.summary.sibgroup <-
SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T))  %>%
mutate(Variable = "Productive Vocabulary 18m (CDI)") %>%
select(Variable, SibGroup, mean, sd)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
View(table.data.summary)
table.data.summary <- table.data.summary.mean %>% left_join(table.data.summary.sd) %>%
select(Variable, `none m`, `none sd`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
rename("mean" = "none m",
"sd" = "none sd",
"mean" = "1 m",
"sd" = "1 sd",
"mean" = "2 m",
"sd" = "2 sd")
library(janitor)
library(kableExtra)
library(knitr)
library(magrittr)
table.sibling.number <-
SiblingsData %>% filter(month == 18 & subj != 794) %>%
group_by(Siblings6, sex) %>% tally() %>%
spread(sex, n) %>%
replace(is.na(.), 0) %>%
rename(
"Female" = `F`,
"Male" = "M",
"n Siblings" = Siblings6
) %>%
mutate(Total = sum(Female + Male, na.rm=T, digits = 0)) %>%
adorn_totals("row")
table.data.summary.sibgroup <-
SiblingsData %>% filter(month==18) %>%
group_by(SibGroup) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T))  %>%
mutate(Variable = "Productive Vocabulary 18m (CDI)") %>%
select(Variable, SibGroup, mean, sd)
table.data.summary.speaker <-
speaker.type %>%
filter(audio_video == "video"  &
Speaker == "Family.input") %>%
group_by(SibGroup) %>%
summarise(mean = mean(n),
sd = sd(n)) %>%
mutate(Variable = "N Input utterances, 10-17 months") %>%
select(Variable, SibGroup, mean, sd)
# table.data.summary.cdi <-
#   in.cdi %>%
#   filter(audio_video == "video") %>%
#   group_by(SibGroup) %>%
#   summarise(mean = mean(PC),
#             sd = sd(PC)) %>%
#   mutate(Variable = "% early-acquired words in input") %>%
#   select(Variable, SibGroup, mean, sd)
table.data.summary.object <-
object.presence %>%
filter(audio_video == "video") %>%
group_by(SibGroup) %>%
summarise(mean = mean(PC),
sd = sd(PC)) %>%
mutate(Variable = "% object presence in input") %>%
select(Variable, SibGroup, mean, sd)
table.data.summary.mean <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, mean) %>%
spread(SibGroup, mean) %>%
rename("none m" = "None",
"1 m" = "One",
"2 m" = "2+")
table.data.summary.sd <- rbind(table.data.summary.sibgroup, table.data.summary.speaker, table.data.summary.object) %>%
select(Variable, SibGroup, sd) %>%
spread(SibGroup, sd) %>%
rename("none sd" = "None",
"1 sd" = "One",
"2 sd" = "2+")
table.data.summary <- table.data.summary.mean %>% left_join(table.data.summary.sd) %>%
select(Variable, `none m`, `none sd`, `1 m`, `1 sd`, `2 m`, `2 sd`) %>%
rename("mean" = "none m",
"sd" = "none sd",
"mean" = "1 m",
"sd" = "1 sd",
"mean" = "2 m",
"sd" = "2 sd")
# rename("mean" = "none m",
#        "sd" = "none sd",
#        "mean" = "1 m",
#        "sd" = "1 sd",
#        "mean" = "2 m",
#        "sd" = "2 sd")
names(table.data.summary) <- NULL
Figure.speaker.count <- ggplot(subset(speaker.type, Speaker %in% c("MOT", "FAT", "SIBLING", "Family.input") & audio_video == "video"),
aes(x=Speaker, y=n, color = Speaker)) +
stat_summary(fun.y = mean, geom = "point", aes(group = subj), shape = 1, size = 3, position = position_jitter(.1)) +
stat_summary(fun.data = "mean_cl_boot", colour = "red", shape = 17, size = 1) +
facet_wrap(~SibGroup, ncol=3) +
scale_x_discrete(limits = c("MOT", "FAT", "SIBLING", "Family.input"), labels = c("Mother", "Father", "Sibling", "All")) +
theme_bw(base_size = 15) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
Figure.speaker.count
Figure.speaker.count <- ggplot(subset(speaker.type, Speaker %in% c("MOT", "FAT", "SIBLING", "Family.input") & audio_video == "video"),
aes(x=Speaker, y=n, color = Speaker)) +
stat_summary(fun.y = mean, geom = "point", aes(group = subj), shape = 1, size = 3, position = position_jitter(.1)) +
stat_summary(fun.data = "mean_cl_boot", colour = "red", shape = 17, size = 1) +
facet_wrap(~SibGroup, ncol=3) +
scale_x_discrete(limits = c("MOT", "FAT", "SIBLING", "Family.input"), labels = c("Mother", "Father", "Sibling", "All")) +
theme_bw(base_size = 15) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 0.5))
Figure.speaker.count
