diag = FALSE)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'p-value',
sig.level = c(.001, .01, .05),
sig.level = c(.001, .01, .05),
pch.cex = 0.8,
pch.col = "yellow",
tl.col="black",
tl.cex=1,
addCoef.col = "black",
tl.pos="n",
outline=TRUE,
type = "lower",
diag = FALSE)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'p-value',
sig.level = c(.001, .01, .05),
pch.cex = 0.8,
pch.col = "yellow",
tl.col="black",
tl.cex=1,
addCoef.col = "black",
tl.pos="n",
outline=TRUE,
type = "lower",
diag = FALSE)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'p-value',
sig.level = c(.001, .01, .05))
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'p-value',
sig.level = c(.001, .01, .05),
outline=TRUE,
type = "lower",
diag = FALSE)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE,
type = "lower",
diag = FALSE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(ggcorrplot)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & month > 9)
CDI <- CDI %>% filter(subj != 351 & month > 9)
speaker.type <- speaker.type %>% filter(subj != 351 & month > 9)
object.presence <- object.presence %>% filter(subj != 351 & month > 9)
# eb2cl: hm wait a sec you have month as a numeric var so those filters aren't actually going to work; please check and correct as needed here and in main
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
testRes = cor.mtest(corr.matrix, conf.level = 0.95)
#mat.corr.matrix <- corrplot(corr.matrix, method = "number")
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, insig = 'pch')
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower")
View(testRes)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower",  p.mat = testRes$p)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE,
type = "lower",
diag = FALSE)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower",  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE,
diag = FALSE)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower",  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower",  p.mat = "blank",
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE)
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, type = "lower")
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, insig = 'pch')
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, type = "lower")
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, type = "lower")
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
testRes = cor.mtest(corr.matrix, conf.level = 0.95)
#mat.corr.matrix <- corrplot(corr.matrix, method = "number")
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, p.mat = testRes$p, type = "lower")
#par(cex = 1.2)
ggcorrplot(corr.matrix, hc.order = TRUE, lab = TRUE, type = "lower")
trace(corrplot, edit=TRUE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(ggcorrplot)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & month > 9)
CDI <- CDI %>% filter(subj != 351 & month > 9)
speaker.type <- speaker.type %>% filter(subj != 351 & month > 9)
object.presence <- object.presence %>% filter(subj != 351 & month > 9)
# eb2cl: hm wait a sec you have month as a numeric var so those filters aren't actually going to work; please check and correct as needed here and in main
head(testRes)
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_sex.anova.discrete <- anova(speaker.type.model.sex.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.type_month.anova.discrete <- anova(speaker.type.model.month.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.type_sex.anova.discrete
speaker.type_month.anova.discrete
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
anova(speaker.type.model.0.discrete,speaker.type.model.month.discrete)
anova(speaker.type.model.0.discrete,speaker.type.model.sex.discrete) # significant
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
speaker.type_anova.discrete
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)
anova(object.presence.model.null.discrete, object.presence.model.sex.discrete)
object.presence.model.discrete <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)
anova(object.presence.model.null.discrete, object.presence.model.sex.discrete)  # significant
#shapiro.test(speaker.type$n) # not normal
caregiver == "FAMILY"), REML=FALSE)
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
anova(speaker.type.model.0.discrete,speaker.type.model.month.discrete) # significant
anova(speaker.type.model.0.discrete,speaker.type.model.sex.discrete) # not significant
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.discrete <- summary(speaker.type.model.discrete)
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
input.model.summary.table.discrete
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"Siblings" = "Siblings6")) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
input.model.summary.table.discrete
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"n Siblings" = "Siblings6")) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
input.model.summary.table.discrete
#shapiro.test(speaker.type$n) # not normal
speaker.type.model.0.discrete <- lmerTest::lmer(Log.n ~ 1 + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.month.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.sex.discrete <- lmerTest::lmer(Log.n ~ sex + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
#anova(speaker.type.model.0.discrete,speaker.type.model.month.discrete) # significant
#anova(speaker.type.model.0.discrete,speaker.type.model.sex.discrete) # not significant
speaker.type.model.null.discrete <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model.discrete <- lmerTest::lmer(Log.n ~ Siblings6 + month + (1|subj), data=subset(speaker.type, audio_video == "video" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova.discrete <- anova(speaker.type.model.discrete, speaker.type.model.null.discrete) %>% #p<.01
rename("pval" = `Pr(>Chisq)`)
input.model.summary.discrete <- summary(speaker.type.model.discrete)
input.model.summary.table.discrete <- input.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"n Siblings" = "Siblings6")) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.discrete.summary <- object.presence %>%
filter(audio_video == "video") %>%
group_by(subj, Siblings6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
object.presence.model.discrete <- lmerTest::lmer(PC ~ Siblings6 + month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.null.discrete <- lmerTest::lmer(PC ~ 1 + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.month.discrete <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
object.presence.model.sex.discrete <- lmerTest::lmer(PC ~ sex + (1|subj), data=subset(object.presence,  audio_video == "video"), REML=FALSE)
anova(object.presence.model.null.discrete, object.presence.model.month.discrete)# significant
anova(object.presence.model.null.discrete, object.presence.model.sex.discrete)  # not significant
object.presence.anova.discrete <- anova(object.presence.model.discrete, object.presence.model.null.discrete) %>% # p<.01
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary.discrete <- summary(object.presence.model.discrete)
table.object.presence.model.discrete.summary <- object.presence.model.summary.discrete$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect),
Effect = fct_recode(Effect,
"n Siblings" = "Siblings6")) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
input.variables.model.summaries.discrete <- rbind(input.model.summary.table.discrete, table.object.presence.model.discrete.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
table.input.model.output.discrete <- rbind(speaker.type_anova.discrete, object.presence.anova.discrete
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
table.input.model.output.discrete
input.variables.model.summaries.discrete
View(speaker.type)
corrplot(cor(corr.data.mat, method = "spearman", use="complete.obs"),  p.mat = testRes$p,
insig = 'label_sig',
sig.level = c(.001, .01, .05),
outline=TRUE,
type = "lower",
diag = FALSE)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
#library(citr)
library(feather)
library(ggcorrplot)
library(corrplot)
library(kableExtra)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351 & month > 9)
CDI <- CDI %>% filter(subj != 351 & month > 9)
speaker.type <- speaker.type %>% filter(subj != 351 & month > 9)
object.presence <- object.presence %>% filter(subj != 351 & month > 9)
knitr::opts_chunk$set(echo = TRUE)
# Parental input
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`) # significant effect of age on input
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, caregiver == "FAMILY" & audio_video == "audio"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
# Object presence
# age
age.test.OP <- lmer(PC ~ month + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP.null <- lmer(PC ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
age.test.OP_anova <- anova(age.test.OP, age.test.OP.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.OP <- lmer(Log.n ~ sex + (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP.null <- lmer(Log.n ~ (1|subj), data = subset(object.presence, audio_video == "audio"), REML=FALSE)
sex.test.OP_anova <- anova(sex.test.OP, sex.test.OP.null) %>% #NS
rename("pval" = `Pr(>Chisq)`)
input.sex.age.pvals <- rbind(age.test.input_anova, sex.test.input_anova, age.test.OP_anova, sex.test.OP_anova) %>% rownames_to_column()
speaker.type.model.null <- lmerTest::lmer(Log.n ~ month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup + month + (1|subj), data=subset(speaker.type, audio_video == "audio" &
caregiver == "FAMILY"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>% # NS
rename("pval" = `Pr(>Chisq)`)
input.model.summary <- summary(speaker.type.model)
input.model.summary.table <- input.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Caregiver input", ""))
object.presence.model <- lmerTest::lmer(PC ~ SibGroup + month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.model.null <- lmerTest::lmer(PC ~ month + (1|subj), data=subset(object.presence,  audio_video == "audio"), REML=FALSE)
object.presence.anova <- anova(object.presence.model, object.presence.model.null) %>% # p<.001
rename("pval" = `Pr(>Chisq)`)
object.presence.model.summary <- summary(object.presence.model)
table.object.presence.model.summary <- object.presence.model.summary$coefficients %>%
as.data.frame %>%
rename("p value" = "Pr(>|t|)") %>%
rownames_to_column(var="Effect") %>%
mutate(Effect = ifelse(Effect == "(Intercept)", "Intercept", Effect)) %>%
# printnum(
#   digits = c(2, 2, 2, 2, 3, 3)) %>%
mutate(`p value` = scales::pvalue(`p value`),
Variable = ifelse(Effect == "Intercept", "Object presence", ""))
table.input.model.output <- rbind(speaker.type_anova, object.presence.anova
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = ifelse(grepl("speaker", model), "Caregiver input", "Object presence")) %>%
select(Model, Df, Chisq, `p value`)
input.variables.model.summaries.audio <- rbind(input.model.summary.table, table.object.presence.model.summary) %>%
dplyr::select(Variable, Effect, Estimate, `Std. Error`, `df`, `t value`, `p value`)
cap = "Results of nested model comparisons testing the effect of sibling group on caregiver input/object presence in the audio data. Linear mixed-effects regression models compared our two input measures (object words produced in caregiver input  and object presence) in relation to sibling group (0 vs. 1 vs. 2+) in the audio data. Age in months was included as a fixed effect; subject was included as a random effect."
kable(table.input.model.output, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c")
cap = "Full model outputs from two linear mixed effects regression models comparing our input measures (object words produced in caregiver input and object presence) in relation to sibling group (0 vs. 1 vs. 2+), for the audio data. Age in months was included as a fixed effect in both models and subject was included as a random effect."
kable(input.variables.model.summaries.audio, "latex", booktabs=T, longtable=T,
escape=FALSE,
caption=cap, digits=2, align="c") %>%
row_spec(4, hline_after = T)
speakers.sessions <- speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
group_by(speaker, caregiver, month) %>% tally() %>% summarise(total = sum(n)) %>%
mutate(speaker = str_to_title(speaker)) %>%
mutate(Speaker = ifelse(speaker == "Fat", "Father", speaker),
Speaker = ifelse(speaker %in% c("Mot", "Mt2"), "Mother", Speaker),
Speaker = ifelse(speaker == "Grm", "Grandmother", Speaker),
Speaker = ifelse(speaker == "Grp", "Grandfather", Speaker),
Speaker = ifelse(speaker == "Mot+Fat", "Both parents", Speaker),
Speaker = as.factor(Speaker)) %>%
pivot_wider(names_from = caregiver, values_from = total) %>%
ungroup() %>%
dplyr::select(-speaker) %>%
group_by(Speaker) %>%
summarise(`Caregiver 1` = sum(CG1,na.rm = T),
`Caregiver 2` = sum(CG2,na.rm = T)) %>%
arrange(desc(`Caregiver 1`))
total.sessionsCG1 <- sum(speakers.sessions$`Caregiver 1`) # 344
total.sessionsCG2 <- sum(speakers.sessions$`Caregiver 2`) # 146
# data with 2 mothers - both are counted in the mother row
# number of video sessions (from a total of )
#43*8 # 344 sessions recorded in total
#sum(speakers.sessions$`Caregiver 2`) # 344
#sum(speakers.sessions$`Caregiver 2`) # 146
# speaker.type %>% filter(caregiver %in% c("CG1", "CG2") & audio_video == "video") %>%
#   group_by(subj, caregiver, month) %>%
#   tally() %>% ungroup() %>%
#   group_by(subj) %>%
#   tally() %>%
#   mutate(singlecg = 16-n) %>%
#   filter(n<16) %>%
#   summarise(missing_cg = sum(singlecg))
# 198 videos with just 1 caregiver
#344-198
#198+146 = 344
total.sessionsCG1
corr.data.input <- speaker.type %>% filter(audio_video == "video", month == 17, speaker == "MOT") %>% ungroup() %>%
dplyr::select(subj, n)
corr.data.mat <- SiblingsData %>%
filter(month == 18) %>%
left_join(corr.data.input, by = "subj") %>%
dplyr::select(age_mom, MOTedulevel, Siblings18, Total.words, n) %>%
rename(
"Maternal age" = "age_mom",
"Maternal education" = "MOTedulevel",
"N Siblings" = "Siblings18",
"CDI words" = "Total.words",
"Input words" = "n")
corr.matrix <- cor(corr.data.mat, method = "spearman", use="complete.obs")
testRes = cor.mtest(corr.matrix, conf.level = 0.95)
#mat.corr.matrix <- corrplot(corr.matrix, method = "number")
View(testRes)
View(corr.matrix)
View(corr.data.mat)
corr.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearmans")
cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearmans")
cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman")
subset(corr.matrix$`N siblings`, rownames(corr.matrix) == `Input words`)
corr.matrix[Input words, ]
corr.matrix[`Input words`, ]
include_list <- "Input words"
subset(corr.matrix$`N siblings`, rownames(corr.matrix) %in% include_list)
subset(corr.matrix, rownames(corr.matrix) %in% include_list)
subset((corr.matrix, rownames(corr.matrix) %in% include_list)$`N siblings`)
subset(corr.matrix, rownames(corr.matrix) %in% include_list)$`N siblings`
subset(corr.matrix, rownames(corr.matrix) %in% include_list)
(subset(corr.matrix, rownames(corr.matrix) %in% include_list))$`N siblings`
cor.row <- subset(corr.matrix, rownames(corr.matrix) %in% include_list)
cor.row %>% dplyr::select(`N siblings`)
cor.row %>% dplyr::select(`N Siblings`)
cor.row <- subset(corr.matrix, rownames(corr.matrix) %in% include_list)$`N Siblings`
cor.row <- subset((corr.matrix, rownames(corr.matrix) %in% include_list)$`N Siblings`)
corr.matrix["N Siblings", "Input words"]
rho <- corr.matrix["N Siblings", "Input words"]
unlist(testRes)
test <- unlist(testRes)
View(testRes)
cor.res <- cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman")
View(cor.res)
cor.res <- unlist(cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman"))
cor.res <- as.data.frame(cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman"))
cor.res <- unlist(cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman"))
View(cor.res)
cor.res$p.value
cor.res[,p.value]
cor.res[,"p.value"]
cor.res["p.value", ]
cor.res[1,"p.value"]
cor.res[ ,"p.value"]
cor.res <- unlist(cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman"))
cor.res <- cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman")
cor.res$p.value
cor.res <- cor.test(corr.data.mat$`Input words`, corr.data.mat$`N Siblings`, method = "spearman")
View(cor.res)
printp(cor.res$p.value)
