replace(is.na(.), 0)
View(SibGroup_cdi)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
mutate(subj = as.factor(subj)) %>%
left_join(SibGroup_cdi) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- SibGroup_cdi %>%
mutate(subj = as.factor(subj)) %>%
left_join(types_tokens_CHI) %>%
left_join(types_tokens) %>%
replace(is.na(.), 0)
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
types_tokens_overall_CDI_sibgroup<- SibGroup_cdi %>%
mutate(subj = as.factor(subj)) %>%
left_join(types_tokens_CHI) %>%
left_join(types_tokens) %>%
replace(is.na(.), 0)
write_csv(types_tokens_overall_CDI_sibgroup, "Data/types_tokens_overall_CDI_sibgroup.csv")
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, cdi)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3)
figure_sibgroup_numtypes_cdi
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3)
figure_sibgroup_numtypes_cdi
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- SibGroup_cdi %>%
mutate(subj = as.factor(subj)) %>%
left_join(types_tokens_CHI) %>%
left_join(types_tokens)
View(types_tokens_CHI)
View(types_tokens)
read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
View(types_tokens_CHI)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3)
figure_sibgroup_numtypes_cdi
#grabbing sibgroup and CDI from SiblingsData df
SibGroup_cdi <- SiblingsData %>%
filter(month==18) %>%
dplyr::select(subj, SibGroup,Total.words) %>%
rename(CDI = Total.words)
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
#grabbing sibgroup and CDI from SiblingsData df
SibGroup_cdi <- SiblingsData %>%
filter(month==18) %>%
dplyr::select(subj, SibGroup,Total.words) %>%
rename(CDI = Total.words)
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
View(types_tokens_overall_CDI_sibgroup)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3)
figure_sibgroup_numtypes_cdi
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
#grabbing sibgroup and CDI from SiblingsData df
SibGroup_cdi <- SiblingsData %>%
filter(month==18) %>%
dplyr::select(subj, SibGroup,Total.words) %>%
rename(CDI = Total.words)
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &
subj != 351) %>%    # remove infant productions
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
ylab("Reported productive vocabulary size (CDI)") +
xlab("Number of total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
#ylab("Reported productive vocabulary size (CDI)") +
#xlab("Number of total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351 &
month > 9) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351 &
month > 9) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
write_csv(types_tokens_overall_CDI_sibgroup, "Data/types_tokens_overall_CDI_sibgroup.csv")
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
ylab("Reported productive vocabulary size (CDI)") +
xlab("Total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351 &
month > 09) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351 &
month > 09) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
write_csv(types_tokens_overall_CDI_sibgroup, "Data/types_tokens_overall_CDI_sibgroup.csv")
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351 &
month > "09") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351 &
month > "09") %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
ylab("Reported productive vocabulary size (CDI)") +
xlab("Total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351 &
#month > "09"
) %>%
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351 &
#month > "09"
) %>%
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351 #&
#month > "09"
) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351 #&
#month > "09"
) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
ylab("Reported productive vocabulary size (CDI)") +
xlab("Total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
types_tokens <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &  # remove infant productions
subj != 351
) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_CHI <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(speaker == "CHI" &
subj != 351
) %>%
dplyr::group_by(subj) %>%
mutate(subj = as.factor(subj)) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level)) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
mutate(subj=as.factor(subj)) %>%
left_join(SibGroup_cdi)
write_csv(types_tokens_overall_CDI_sibgroup, "Data/types_tokens_overall_CDI_sibgroup.csv")
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, CDI)) +
geom_point(shape=3) +
stat_smooth(method="lm") +
ylab("Reported productive vocabulary size (CDI)") +
xlab("Total word types produced (audio and video recordings)") +
facet_wrap(~SibGroup, scales="free", nrow=3) +
theme_bw()
figure_sibgroup_numtypes_cdi
#cl2eb: the wilcox tests above (testing CDI only) go on month 18 only, so I took month 17 as the last month where we have CDI and recorded data.
# i'd probably stick to just types if they're all pretty similar fwiw, more analogous to CDI
measures.corrs <- SiblingsData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
measures.corrs
measures.corrs2 <- measures.corrs %>% filter(SibGroup == "2+") %>% pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs2
measures.corrs2 <- measures.corrs %>% filter(SibGroup == "2+") %>%
pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs2 <- measures.corrs %>% #filter(SibGroup == "2+") %>%
pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs2
measures.corrs <- SiblingsData %>%
filter(month == 17) %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
measures.corrs2 <- measures.corrs %>% #filter(SibGroup == "2+") %>%
pivot_longer(cols = c(cdi_vid_est, cdi_aud_est)) %>%
filter(value == min(value)) %>%
rename("est" = "value") %>%
dplyr::select(-name) %>%
pivot_longer(cols = c(cdi_vid_pval, cdi_aud_pval))
measures.corrs2
measures.corrs
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(Total.words, types_video, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(Total.words, types_video, use = "complete.obs")$p.value,
cdi_aud_est = cor.test(Total.words, types_audio, use = "complete.obs")$estimate,
cdi_aud_pval = cor.test(Total.words, types_audio, use = "complete.obs")$p.value)
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(cdi_vid_est = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
cdi_vid_pval = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value)
measures.corrs
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value)
measures.corrs
types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
tally() %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value)
types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
tally()
types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
filter(!is.na(CDI)) %>%
tally()
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
left_join(n_corrs)
n_corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
filter(!is.na(CDI)) %>%
tally()
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
left_join(n_corrs)
measures.corrs
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
left_join(n_corrs) %>%
dplyr::select(SibGroup, n, r, p)
measures.corrs
mutate(p = scales::pvalue(p) %>%
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
p = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
mutate(p = scales::pvalue(p)) %>%
left_join(n_corrs) %>%
dplyr::select(SibGroup, n, r, p)
measures.corrs
n_corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
filter(!is.na(CDI)) %>%
tally()
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
`p value` = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
mutate(`p value` = scales::pvalue(`p value`)) %>%
left_join(n_corrs) %>%
dplyr::select(SibGroup, n, r, `p value`)
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
`p value` = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
mutate(`p value` = scales::pvalue(`p value`)) %>%
left_join(n_corrs)
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
`p value` = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
mutate(`p value` = scales::pvalue(`p value`))
measures.corrs
n_corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
filter(!is.na(CDI)) %>%
tally()
measures.corrs <- types_tokens_overall_CDI_sibgroup %>%
group_by(SibGroup) %>%
summarise(r = cor.test(CDI, numtypes_chi, use = "complete.obs")$estimate,
`p value` = cor.test(CDI, numtypes_chi, use = "complete.obs")$p.value) %>%
mutate(`p value` = scales::pvalue(`p value`)) %>%
left_join(n_corrs) %>%
dplyr::select(SibGroup, n, r, `p value`)
measures.corrs
