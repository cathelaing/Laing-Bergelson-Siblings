sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
# for converting subject numbers, NOT PUSHING this file for data anonymity
random_subjnums <- read_csv("Data/random_subnums.csv")
#grabbing type and token counts overall and for CHI
seedlings_nouns <- get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
filter(audio_video=="video")
library(blabr)
install.packages("blabr")
install.packages('cli')
devtools::install_github("BergelsonLab/blabr")
1
seedlings_nouns <- get_seedlings_nouns('v1.0.0')
library(blabr)
devtools::install_github("BergelsonLab/blabr")
devtools::install_github("BergelsonLab/blabr")
devtools::install_github("BergelsonLab/blabr")
library(blabr)
install.packages("tidyverse")
library(tidyverse)
library(papaja)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(papaja)
library(tidyverse)
library(papaja)
#library(tidyverse)
library(dplyr)
library(ggplot2)
install.packages(c("ggplot2", "vctrs"))
library(papaja)
library(tidyverse)
library(tidyverse)
R.home(component = "home")
R.home(component = "home")
uninstall.packages("tidyverse")
uninstall?
?uninstall
remove. packages("tidyverse")
remove.packages("tidyverse")
remove.packages("ggplot2")
remove.packages("dplyr")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(papaja)
library(tidyverse)
remove.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
.libPaths()
Sys.getenv()
.libPaths()
gc()
library(papaja)
library(tidyverse)
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(papaja)
library(tidyverse)
library(tidyverse)
library(fuzzyjoin)
library(irr)
library(glue)
library(lpSolve)
library(readr)
R.home(component = "home")
library(papaja)
library(tidyverse)
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
sibsdata <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(#audio_video =='video',   # Only use video data
!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::select(
audio_video,
utterance_type,
speaker,
object_present,
basic_level,
subj,
month) %>%
mutate(basic_level = str_to_lower(basic_level),
speaker = factor(speaker),
speaker = fct_collapse(speaker,
"SIBLING" = c("BRO", "BR1", "BR2", "SIS", "SI1", "SI2", "BTY", "SCU", "STY", "SIU"),
"AUNT" = c("AUN", "AU2"),
"UNCLE" = c("UN2", "UNC"),
"BABYSITTER" = c("BSE", "BSJ", "BSK", "BSS", "BSC", "BSB", "BSD", "BSL"),
"FAT" = c("FTS", "FTY", "MFT", "MFV"), # 2 instances of MFT and MFV in the data, in both cases MOT is CG1 and MFT/MFV CG2
"GRP" = c("GP2"),
"GRM" = c("GRA", "GTY"),
"MOT" = c("MBR", "MCU", "MIS", "MTY"),
#"MOT+FAT" = c("MFT", "MFV"),
"COUSIN" = c("MC2", "COU", "FCO", "MCO"),
"OTHER ADULT" = c("AF2", "AF4", "AF5", "AF6", "AF7", "AF8", "AFA",
"AFB", "AFC", "AFD", "AFH", "AFJ", "AFL", "AFM",
"AFP", "AFR", "AFS", "AFT", "AM1", "AM2", "AM3", "AM6",
"AMB","AMC","AMG","AMR", "X12"),
"OTHER CHILD" = c("CFC", "CFR", "CFZ",
"CM1", "CM2")),  # rename speakers
subj = factor(subj),
month = as.numeric(month))
source("Demographics.R")
library(tidyverse)
library(readr)
library(feather)
library(stringi)
library(stringr)
library(forcats)
sibsdata <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(#audio_video =='video',   # Only use video data
!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%    # remove infant productions
dplyr::select(
audio_video,
utterance_type,
speaker,
object_present,
basic_level,
subj,
month) %>%
mutate(basic_level = str_to_lower(basic_level),
speaker = factor(speaker),
speaker = fct_collapse(speaker,
"SIBLING" = c("BRO", "BR1", "BR2", "SIS", "SI1", "SI2", "BTY", "SCU", "STY", "SIU"),
"AUNT" = c("AUN", "AU2"),
"UNCLE" = c("UN2", "UNC"),
"BABYSITTER" = c("BSE", "BSJ", "BSK", "BSS", "BSC", "BSB", "BSD", "BSL"),
"FAT" = c("FTS", "FTY", "MFT", "MFV"), # 2 instances of MFT and MFV in the data, in both cases MOT is CG1 and MFT/MFV CG2
"GRP" = c("GP2"),
"GRM" = c("GRA", "GTY"),
"MOT" = c("MBR", "MCU", "MIS", "MTY"),
#"MOT+FAT" = c("MFT", "MFV"),
"COUSIN" = c("MC2", "COU", "FCO", "MCO"),
"OTHER ADULT" = c("AF2", "AF4", "AF5", "AF6", "AF7", "AF8", "AFA",
"AFB", "AFC", "AFD", "AFH", "AFJ", "AFL", "AFM",
"AFP", "AFR", "AFS", "AFT", "AM1", "AM2", "AM3", "AM6",
"AMB","AMC","AMG","AMR", "X12"),
"OTHER CHILD" = c("CFC", "CFR", "CFZ",
"CM1", "CM2")),  # rename speakers
subj = factor(subj),
month = as.numeric(month))
View(sibsdata)
View(sibsdata)
library(tidyverse)
library(feather)
library(dplyr)
library(readr)
setwd("C:/Code/Laing-Bergelson-Siblings/not-for-publication/BLAB_DATA/BLAB_data_3-2022")
library(tidyverse)
library(feather)
library(dplyr)
library(readr)
# write_csv(subnums, "data/random_subj_JUL282018.csv")
#
subnums <- read_csv("random_subj_JUL282018.csv")
subnums <- subnums %>% filter(subj != "05" & subj != "24")
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0')
View(all_basiclevel_randsubj)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child")
View(subnums)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
mutate(subj = fct_recode(subj,
"01" = "1",
"02" = "2",
"03" = "3",
"04" = "4",
"06" = "6",
"07" = "7",
"08" = "8",
"09" = "9")) %>% left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(-SubjectNumber, -id)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
# mutate(subj = fct_recode(subj,
#                          "01" = "1",
#                          "02" = "2",
#                          "03" = "3",
#                          "04" = "4",
#                          "06" = "6",
#                          "07" = "7",
#                          "08" = "8",
#                          "09" = "9")) %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(-SubjectNumber, -id)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
# mutate(subj = fct_recode(subj,
#                          "01" = "1",
#                          "02" = "2",
#                          "03" = "3",
#                          "04" = "4",
#                          "06" = "6",
#                          "07" = "7",
#                          "08" = "8",
#                          "09" = "9")) %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number)
View(all_basiclevel_randsubj)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
# mutate(subj = fct_recode(subj,
#                          "01" = "1",
#                          "02" = "2",
#                          "03" = "3",
#                          "04" = "4",
#                          "06" = "6",
#                          "07" = "7",
#                          "08" = "8",
#                          "09" = "9")) %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(subj, month, audio_video, speaker, object, basic_level, utterance_type, object_present)
all_basiclevel_randsubj_test <- all_basiclevel_randsubj %>% filter(!is.na(basic_level))
sibsdata <- read_csv("Data/all_basiclevel_randsubj.csv")
sibsdata <- read_csv("Data/all_basiclevel_randsubj.csv")
library(tidyverse)
library(readr)
library(feather)
library(stringi)
library(stringr)
library(forcats)
sibsdata <- read_csv("Data/all_basiclevel_randsubj.csv")
# write_csv(subnums, "data/random_subj_JUL282018.csv")
#
subnums <- read_csv("random_subj_JUL282018.csv")
# write_csv(subnums, "data/random_subj_JUL282018.csv")
#
subnums <- read_csv("not-for-publication/BLAB_DATA/BLAB_data_3-2022/random_subj_JUL282018.csv")
# write_csv(subnums, "data/random_subj_JUL282018.csv")
#
subnums <- read_csv("not-for-publication/BLAB_DATA/BLAB_data_3-2022/random_subj_JUL282018.csv")
subnums <- subnums %>% filter(subj != "05" & subj != "24")
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
# mutate(subj = fct_recode(subj,
#                          "01" = "1",
#                          "02" = "2",
#                          "03" = "3",
#                          "04" = "4",
#                          "06" = "6",
#                          "07" = "7",
#                          "08" = "8",
#                          "09" = "9")) %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(subj, month, audio_video, speaker, object, basic_level, utterance_type, object_present) %>%
write_csv("all_basiclevel_randsubj.csv")
all_basiclevel_randsubj_test <- all_basiclevel_randsubj %>% filter(!is.na(basic_level))
library(tidyverse)
library(blabr)
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(feather)
library(pander)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
#grabbing sibgroup and CDI from Catherine's SiblingsData df
randsubj_SibGroup_cdi <- SiblingsData %>%
filter(month==18) %>%
dplyr::select(subj, SibGroup,Total.words) %>%
rename(cdi = Total.words)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- sibsdata %>%
filter(audio_video=="video")
View(seedlings_nouns)
View(seedlings_nouns)
# write_csv(subnums, "data/random_subj_JUL282018.csv")
#
subnums <- read_csv("not-for-publication/BLAB_DATA/BLAB_data_3-2022/random_subj_JUL282018.csv")
subnums <- subnums %>% filter(subj != "05" & subj != "24")
#all_basiclevel <- get_seedlings_nouns('v1.0.0')
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(subj, month, audio_video, speaker, object, basic_level, utterance_type, object_present) %>%
filter(!is.na(basic_level))
View(all_basiclevel_randsubj)
all_basiclevel_randsubj <- blabr::get_seedlings_nouns('v1.0.0') %>%
rename("subj" = "child") %>%
left_join(subnums) %>% select(-subj) %>% rename(subj = number) %>%
dplyr::select(subj, month, audio_video, speaker, object, basic_level, utterance_type, object_present) %>%
filter(!is.na(basic_level)) %>%
write_csv("all_basiclevel_randsubj.csv")
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(feather)
library(pander)
source("DataGathering.R")
# remove one of the twins from each dataset
demographics <- demographics %>% filter(subj != 351)
sib.ages <- sib.ages %>% filter(subj != 351)
SiblingsData <- SiblingsData %>% filter(subj != 351)
CDI <- CDI %>% filter(subj != 351)
speaker.type <- speaker.type %>% filter(subj != 351)
object.presence <- object.presence %>% filter(subj != 351)
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# function for calculating R^2:
r2.corr.mer <- function(m) {
lmfit <-  lm(model.response(model.frame(m)) ~ fitted(m))
summary(lmfit)$r.squared
}
#grabbing sibgroup and CDI from Catherine's SiblingsData df
randsubj_SibGroup_cdi <- SiblingsData %>%
filter(month==18) %>%
dplyr::select(subj, SibGroup,Total.words) %>%
rename(cdi = Total.words)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- sibsdata %>%
filter(audio_video=="video")
types_tokens <- seedlings_nouns %>%
filter(speaker != "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
dplyr::select(-subj) %>%
#rename(subj = number) %>%
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
dplyr::select(-subj) %>%
rename(subj = number) %>%
mutate(subj=as.factor(subj))
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
dplyr::select(-subj) %>%
#rename(subj = number) %>%
mutate(subj=as.factor(subj))
View(types_tokens)
View(types_tokens_CHI)
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj)
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI")
View(seedlings_nouns)
View(sibsdata)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video")
types_tokens <- seedlings_nouns %>%
filter(speaker != "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT") &
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING"))))
View(types_tokens)
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT"))) %>%
filter((!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING")))
View(types_tokens)
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) |
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING")))
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING")))
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING"))) %>%
dplyr::group_by(subj) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
View(types_tokens)
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
View(types_tokens_CHI)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
dplyr::select(-subj) %>%
#rename(subj = number) %>%
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI)
View(types_tokens_overall_CDI_sibgroup)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video" &
subj != 794 & month >9))
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video" &
subj != 794 & month >9)
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING"))) %>%
dplyr::group_by(subj) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video" &
subj != 794 & month >9)
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv")
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video" &
subj != "794" &
month >"09")
min(seedlings_nouns$month)
#grabbing type and token counts overall and for CHI
seedlings_nouns <- read_csv("Data/all_basiclevel_randsubj.csv") %>%
filter(audio_video=="video" &
subj != "794" &
month >"09")
types_tokens <- seedlings_nouns %>%
filter(!(speaker %in% c('CHI', "EFA", "EFB", "EFS", "EMM", "EFE", "GRO", "MBT")) &
(!grepl("TV", speaker)) & !(speaker %in% c("TOY", "SIBLING"))) %>%
dplyr::group_by(subj) %>%
summarise(numtokens = n(),
numtypes = n_distinct(basic_level))
types_tokens_CHI <- seedlings_nouns %>%
filter(speaker == "CHI") %>%
dplyr::group_by(subj) %>%
summarise(numtokens_chi = n(),
numtypes_chi = n_distinct(basic_level))
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
dplyr::select(-subj)
types_tokens_overall_CDI_sibgroup<- types_tokens %>%
left_join(types_tokens_CHI) %>%
replace(is.na(.), 0) %>% # to replace the NAs for input
# left_join(random_subjnums) %>%
#dplyr::select(-subj) %>%
#rename(subj = number) %>%
mutate(subj=as.factor(subj)) %>%
left_join(randsubj_SibGroup_cdi)
rm(random_subjnums)
figure_sibgroup_numtypes_cdi <- types_tokens_overall_CDI_sibgroup %>%
ggplot(aes(numtypes_chi, cdi))+geom_point(shape=3)+stat_smooth(method="lm")+
facet_wrap(~SibGroup, scales="free", nrow=3)
figure_sibgroup_numtypes_cdi
