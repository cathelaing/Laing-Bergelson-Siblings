speaker.type.SIB_wilcox_one_two$p.value
0.05/2,4
r round(0.05/2,4)
speaker.type.MOT_wilcox_one_two$statistic
speaker.type.MOT_wilcox_none_one$statistic
speaker.type.MOT_wilcox_none_one$p.value
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
other.speaker.data <-
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other)*100,
PC.other.sd = sd(prop.other)*100)
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
utterance.type.PC <- utterance.type.PC %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
# age
age.test.cdi <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi.null <- lmer(Log.Totalwords ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi_anova <- anova(age.test.cdi, age.test.cdi.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
age.test_df <- age.test.cdi_anova$`Chi Df`[2]
age.test_chisq <- age.test.cdi_anova$Chisq[2]
age.test_p.value <- age.test.cdi_anova$pval[2]
age.test.video.tokens <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.video.tokens.null <- lmer(Log.tokens_video ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test_anova <- anova(age.test.video.tokens, age.test.video.tokens.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.cdi <- lmer(Log.Totalwords ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.cdi.null <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.cdi, sex.test.cdi.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
sex.test_df <- sex.test_anova$`Chi Df`[2]
sex.test_chisq <- sex.test_anova$Chisq[2]
sex.test_p.value <- sex.test_anova$pval[2]
sex.test.video.tokens <- lmer(Log.tokens_video ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.video.tokens.null <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.video.tokens, sex.test.video.tokens.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
cor.age <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
cor.edu <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.edu.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$Total.words
, method = "spearman"
)
cor.age.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup6) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup6, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$`Pr(>Chisq)`[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null)
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null)
# # Checking consistency with words produced in recordings
#
# # Tokens - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_video <- anova(sibsYN.model.tokens_video, sibsYN.model.tokens_video.null) # NS
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_video <- anova(sibgroup.model.tokens_video, sibgroup.model.tokens_video.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_video <- lmerTest::lmer(Log.tokens_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_video.null <- lmerTest::lmer(Log.tokens_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_video <- anova(sibnumber.model.tokens_video, sibnumber.model.tokens_video.null) # NS
#
# # Types - video
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_video <- lmerTest::lmer(Log.types_video ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_video <- anova(sibsYN.model.types_video, sibsYN.model.types_video.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_video <- lmerTest::lmer(Log.types_video ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_video <- anova(sibgroup.model.types_video, sibgroup.model.types_video.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_video <- lmerTest::lmer(Log.types_video ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_video.null <- lmerTest::lmer(Log.types_video ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_video <- anova(sibnumber.model.types_video, sibnumber.model.types_video.null) # NS
#
# # Tokens - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.tokens_anova_audio <- anova(sibsYN.model.tokens_audio, sibsYN.model.tokens_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.tokens_anova_audio <- anova(sibgroup.model.tokens_audio, sibgroup.model.tokens_audio.null) # NS
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.tokens_audio <- lmerTest::lmer(Log.tokens_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.tokens_audio.null <- lmerTest::lmer(Log.tokens_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.tokens_anova_audio <- anova(sibnumber.model.tokens_audio, sibnumber.model.tokens_audio.null) # p=.05
#
# # Types - audio
#
# # SibYN: Does having any number of siblings affect language development over time?
#
# sibsYN.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibsYN.types_anova_audio <- anova(sibsYN.model.types_audio, sibsYN.model.types_audio.null) # p<.05
#
# # SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
#
# sibgroup.model.types_audio <- lmerTest::lmer(Log.types_audio ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibgroup.types_anova_audio <- anova(sibgroup.model.types_audio, sibgroup.model.types_audio.null) # p<.001
#
# # Sibling number: Does number of siblings affect language development over time?
#
# sibnumber.model.types_audio <- lmerTest::lmer(Log.types_audio ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.model.types_audio.null <- lmerTest::lmer(Log.types_audio ~ month + (1|subj), data=SiblingsData, REML=FALSE)
# sibnumber.types_anova_audio <- anova(sibnumber.model.types_audio, sibnumber.model.types_audio.null) # p=.05
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova
#sibsYN.tokens_anova_video, sibsYN.tokens_anova_audio,
#  sibgroup.tokens_anova_video, sibgroup.tokens_anova_audio,
#  sibnumber.tokens_anova_video, sibnumber.tokens_anova_audio,
#   sibsYN.types_anova_video, sibsYN.types_anova_audio,
#   sibgroup.types_anova_video, sibgroup.types_anova_audio,
#    sibnumber.types_anova_video, sibnumber.types_anova_audio
) %>%
rownames_to_column(var="model") %>%
filter(Chisq > 0) %>%
rename("p value" = "Pr(>Chisq)") %>%
# mutate(Count = ifelse(model == "sibsYN.model", "CDI", ""),
#                 Count = ifelse(model == "sibsYN.model.tokens_video", "Tokens", Count),
#        Count = ifelse(model == "sibsYN.model.types_video", "Types", Count),
#        Data = ifelse(grepl("video", model), "Video", NA),
#        Data = ifelse(grepl("audio", model), "Audio", Data),
#        Data = ifelse(is.na(Data), "CDI", Data)) %>%
mutate(Model = ifelse(grepl("sibsYN", model), "0 vs. >0 siblings", NA),
Model = ifelse(grepl("sibgroup", model), "Sibling group", Model),
Model = ifelse(grepl("sibnumber", model), "Sibling number", Model)) %>%
select(Model, Df, Chisq, `p value`)
# cap = "Output from regression models comparing language development over time in relation to sibling number (binary, grouped and discrete variables). Month was included in each model as a fixed effect; subject was included as a random effect."
# #apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
# kable(table.sibling.model.output, "latex", booktabs=T, longtable=T,
#       caption=cap, digits=2, align="c")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#digits = c(2, 2, 2, 2, 3, 0)
# , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(`$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("beta" = `$b$`)
siblingnum.beta <- as.numeric(siblings.model.summary.table$beta[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
table.sibgroup.model.summary <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
# mutate(
#   Effect = papaja:::beautify_terms(rownames(.))
# ) %>%
printnum(
#  digits = c(2, 2, 2, 2, 3, 0)
#  , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
#  select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
sibgroup1.beta <- as.numeric(table.sibgroup.model.summary$beta[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(table.sibgroup.model.summary$beta[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
# siblings.model.summary.video <- summary(sibnumber.model.types_video)
#
# siblings.model.summary.video.table <- siblings.model.summary.video$coefficients %>%
#   as.data.frame %>%
#   rename(
#     "$b$" = "Estimate"
#     , "SE" = "Std. Error"
#     , "$df$" = "df"
#     , "$t$" = "t value"
#     , "$p$" = "Pr(>|t|)"
#   ) %>%
#   mutate(
#     Effect = papaja:::beautify_terms(rownames(.))
#   ) %>%
#   printnum(
#     digits = c(2, 2, 2, 2, 3, 0)
#     , gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#     , zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
#   ) %>%
#   select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
#   rename("betaval" = `$b$`)
#
# siblingnum.vid.beta <- as.numeric(siblings.model.summary.video.table$betaval[2])
#
# siblingnum.vid.beta <- abs(siblingnum.vid.beta*100)
#shapiro.test(SiblingsData$Total.words) # not normal
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
cap = "Full model output from linear mixed effects regression model comparing language development over time in relation to sibling group. Age in months was included in each model as a fixed effect; subject was included as a random effect."
#apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
kable(siblings.model.summary.table, "latex", booktabs=T, longtable=T,
caption=cap, digits=2, align="c")
par(cex = 1.2)
Figure.SibGroup
cap <- sprintf("Reported productive vocabulary acquisition (CDI) over time. Colors denote sibling group; line with grey confidence band reflects local estimator (loess) fit over individual infants’ vocabulary at each month. Triangles indicate mean with bootstrapped CIs computed over each month's data. Points (jittered horizontally) show individual infants' vocabulary size at each month. Y-axis utilizes log-transformed vertical spacing for visual clarity.")
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for age
age.test.input_df <- age.test.input_anova$Df[2]
age.test.input_chisq <- age.test.input_anova$Chisq[2]
age.test.input_p.value <- age.test.input_anova$pval[2]
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT" & audio_video == "video"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # Strong effect for sex - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for sex
sex.test.input_df <- sex.test.input_anova$`Chi Df`[2]
sex.test.input_chisq <- sex.test.input_anova$Chisq[2]
sex.test.input_p.value <- sex.test.input_anova$pval[2]
cor.edu.input <- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$MOTedulevel
, method = "spearman"
)
cor.vocab.input <- cor.test(
x = subset(SiblingsData, month == 17)$Total.words
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, method = "spearman"
)
cor.age.input<- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT" & audio_video == "video")$age_mom
, method = "spearman"
)
all.speakers <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
summarise(total.n = sum(n))
speaker.summary <-
speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(subj, Speaker) %>%
summarise(total.speaker = sum(n)) %>%
left_join(all.speakers) %>%
mutate(PC.input = (total.speaker/total.n)*100) %>%
ungroup()
PC.MOT <- speaker.summary %>%
filter(Speaker == "MOT") %>%
summarise(PCMOT = mean(PC.input),
SDMOT = sd(PC.input))
PC.FAT <- speaker.summary %>%
filter(Speaker == "FAT") %>%
summarise(PCFAT = mean(PC.input),
SDFAT = sd(PC.input))
PC.SIB <- speaker.summary %>%
filter(Speaker == "SIBLING") %>%
summarise(PCSIB = mean(PC.input),
SDSIB = sd(PC.input))
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT" & audio_video == "video") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup6 != "None" & audio_video == "video") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
filter(audio_video == "video" & Speaker != "Family.input") %>%
group_by(SibGroup6) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
cap = "Data summary of all three input variables and reported vocabulary size at 18 months."
kable(table.data.summary, "latex", booktabs = T, caption = cap, digits = 2, align = "c")  %>%
add_header_above(c(" " = 1, "No siblings" = 2, "1 sibling" = 2, "2+ siblings" = 2))
par(cex = 1.2)
Figure.speaker.count
cap <- sprintf("Mean number of words produced by Mothers, Fathers and Siblings across sessions recorded between 10-17 months. Circles represent values for individual infants; red triangles show group means.")
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ Speaker + (1|subj), data=subset(speaker.type, audio_video == "video" &
Speaker != "Family.input"), REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
summary(speaker.type.model)
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(subj) %>%
mutate(MeanN = mean(n)) %>%
filter(month == 17)
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One"  & audio_video == "video")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
filter(audio_video == "video" & Speaker == "Family.input") %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(n))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
sib.present <- speaker.type %>%
filter(Speaker == "SIBLING" & SibsYN == "Y" & audio_video == "video") %>%
mutate(present = ifelse(n > 0, 1, 0)) %>%
group_by(present) %>%
tally() %>%
mutate(total = sum(n),
prop.present = n/total*100) %>%
filter(present == 1)
# Difference in amount of input from siblings
speaker.type.SIB <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "SIBLING" & audio_video == "video") %>%
mutate(MeanN = mean(n),
TotalN = sum(n)) %>%
filter(month == 17)
speaker.type.SIB_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
speaker.type.SIB_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.SIB, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.SIB, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
# Difference in amount of input from mothers
speaker.type.MOT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "MOT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.MOT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.MOT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.MOT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.MOT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # p<.001
# Difference in amount of input from fathers
speaker.type.FAT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "FAT" & audio_video == "video") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.FAT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "None" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
speaker.type.FAT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "2+" & audio_video == "video")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One" & audio_video == "video")$MeanN
, paired = FALSE
) # NS
