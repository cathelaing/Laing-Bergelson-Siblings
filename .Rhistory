, method = "spearman"
)
cor.edu.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$Total.words
, method = "spearman"
)
cor.age.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup6) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup6, mean, sd)
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
sibsYN_df <- sibsYN_anova$`Chi Df`[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$pval[2]
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval",
"df" = "Chi Df") %>%
mutate(Model = fct_recode(Model,
"0 vs. >0 siblings" = "sibsYN.model",
"Sibling group" = "sibgroup.model",
"Sibling number" = "sibnumber.model")) %>%
select(Model, df, Chisq, `p value`)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval",
"df" = "Chi Df")
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0)
View(table.sibling.model.output)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = fct_recode(Model,
"0 vs. >0 siblings" = "sibsYN.model",
"Sibling group" = "sibgroup.model",
"Sibling number" = "sibnumber.model")) %>%
select(Model, df, Chisq, `p value`)
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = fct_recode(Model,
"0 vs. >0 siblings" = "sibsYN.model",
"Sibling group" = "sibgroup.model",
"Sibling number" = "sibnumber.model")) %>%
select(Model, Df, Chisq, `p value`)
sessionInfo()
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
sibnums <- demographics %>% summarise(minsibs = min(Siblings6),
maxsibs = max(Siblings6))
sibage <- sib.ages %>% filter(SibsYN == "Y") %>% summarise(meandays = mean(age.diff.d),
mediandays = median(age.diff.d),
sddays = sd(age.diff.d),
maxdays = max(age.diff.d),
mindays = min(age.diff.d))
age.diff.inyears <- sibage$mediandays/365
minsib <- sibage$mindays/365
maxsib <- sibage$maxdays/365
nowords <- SiblingsData %>% filter(month == 18 & Total.words == 0) %>% tally()
Nwords <- SiblingsData %>% filter(month == 18) %>% summarise(meanwords = mean(Total.words, na.rm=T),
sdwords = sd(Total.words, na.rm=T),
mdnwords = median(Total.words, na.rm=T))
Nsibs <- SiblingsData %>% filter(month == 18) %>% summarise(meansibs = mean(Siblings6),
sdsibs = sd(Siblings6),
mdnsibs = median(Siblings6))
# In overall vocabulary development
CDI %>% filter(month == 18) %>%
mutate(outlier = (Total.words >
(mean(Total.words, na.rm=T) +
3*(sd(Total.words, na.rm=T))) |
Total.words <
(mean(Total.words, na.rm=T) -
3*(sd(Total.words, na.rm=T))))) %>%
filter(outlier == TRUE)
# month 10: 521, 749, 342
# month 11: 521, 342
# month 13: 794
# month 14: 794
# month 15: 794
# month 16: 794
# month 17: 794
# month 18: 794
## Remove 794 from analysis
SiblingsData <- SiblingsData %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
CDI <- CDI %>% filter(subj != 794)
speaker.type <- speaker.type %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
object.presence <- object.presence %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
in.cdi <- in.cdi %>% filter(subj != 794 & !month %in% c("06", "07", "08", "09"))
females <- SiblingsData %>% filter(month == 18 & sex == "F") %>% tally()
source("Figures.R")
cap = "Sibling number by female and male infants."
apa_table(table.sibling.number, caption = cap, col_spanners = NULL, digits = 0, placement = "H", font_size = "small")
# age
age.test.cdi <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi.null <- lmer(Log.Totalwords ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test.cdi_anova <- anova(age.test.cdi, age.test.cdi.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
age.test_df <- age.test.cdi_anova$`Chi Df`[2]
age.test_chisq <- age.test.cdi_anova$Chisq[2]
age.test_p.value <- age.test.cdi_anova$pval[2]
age.test.video.tokens <- lmer(Log.tokens_video ~ month + (1|subj), data = SiblingsData, REML=FALSE)
age.test.video.tokens.null <- lmer(Log.tokens_video ~ (1|subj), data = SiblingsData, REML=FALSE)
age.test_anova <- anova(age.test.video.tokens, age.test.video.tokens.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)
# sex
sex.test.cdi <- lmer(Log.Totalwords ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.cdi.null <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.cdi, sex.test.cdi.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
sex.test_df <- sex.test_anova$`Chi Df`[2]
sex.test_chisq <- sex.test_anova$Chisq[2]
sex.test_p.value <- sex.test_anova$pval[2]
sex.test.cdi <- lmer(Log.Totalwords ~ sex + month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test.cdi.null <- lmer(Log.Totalwords ~ month + (1|subj), data = SiblingsData, REML=FALSE)
sex.test_anova <- anova(sex.test.cdi, sex.test.cdi.null) %>%  # No overall effect for sex
rename("pval" = `Pr(>Chisq)`)
cor.age <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
cor.edu <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.edu.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$MOTedulevel
, method = "spearman"
)
cor.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Siblings18
, y = subset(SiblingsData, month == 18)$Total.words
, method = "spearman"
)
cor.age.vocab <- cor.test(
x = subset(SiblingsData, month == 18)$Total.words
, y = subset(SiblingsData, month == 18)$age_mom
, method = "spearman"
)
sibgroup.summary <- SiblingsData %>% filter(month==18) %>%
group_by(SibGroup6) %>%
summarise(mean = mean(Total.words, na.rm=T),
sd = sd(Total.words, na.rm=T)) %>%
mutate(Variable = "Productive Vocabulary 18m") %>%
select(Variable, SibGroup6, mean, sd)
# SibYN: Does having any number of siblings affect language development over time?
sibsYN.model <- lmerTest::lmer(Log.Totalwords ~ SibsYN + month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibsYN_anova <- anova(sibsYN.model, sibsYN.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
sibsYN_df <- sibsYN_anova$Df[2]
sibsYN_chisq <- sibsYN_anova$Chisq[2]
sibsYN_p.value <- sibsYN_anova$pval[2]
# SibGroup: Does having more vs. fewer vs. no siblings affect language development over time?
sibgroup.model <- lmerTest::lmer(Log.Totalwords ~ SibGroup6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibgroup_anova <- anova(sibgroup.model, sibgroup.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
# sibgroup_df <- sibgroup_anova$`Chi Df`[2]
# sibgroup_chisq <- sibgroup_anova$Chisq[2]
# sibgroup_p.value <- sibgroup_anova$pval[2]
# Sibling number: Does number of siblings affect language development over time?
sibnumber.model <- lmerTest::lmer(Log.Totalwords ~ Siblings6 + month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber.model.null <- lmerTest::lmer(Log.Totalwords ~ month + (1|subj), data=SiblingsData, REML=FALSE)
sibnumber_anova <- anova(sibnumber.model, sibnumber.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
# sibnumber_df <- sibgroup_anova$`Chi Df`[2]
# sibnumber_chisq <- sibgroup_anova$Chisq[2]
# sibnumber_p.value <- sibgroup_anova$pval[2]
table.sibling.model.output <- rbind(sibsYN_anova, sibgroup_anova, sibnumber_anova) %>%
rownames_to_column(var="Model") %>%
filter(Chisq > 0) %>%
rename("p value" = "pval") %>%
mutate(Model = fct_recode(Model,
"0 vs. >0 siblings" = "sibsYN.model",
"Sibling group" = "sibgroup.model",
"Sibling number" = "sibnumber.model")) %>%
select(Model, Df, Chisq, `p value`)
cap = "Output from regression models comparing language development over time in relation to sibling number (binary, grouped and discrete variables). Month was included in each model as a fixed effect; subject was included as a random effect."
apa_table(table.sibling.model.output, caption = cap, col_spanners = NULL, digits = 2, placement = "H", font_size = "small")
siblings.model.summary <- summary(sibnumber.model)
siblings.model.summary.table <- siblings.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
siblingnum.beta <- as.numeric(siblings.model.summary.table$betaval[2])
siblingnum.beta <- abs(siblingnum.beta*100)
sibgroup.model.summary <- summary(sibgroup.model)
table.sibgroup.model.summary <- sibgroup.model.summary$coefficients %>%
as.data.frame %>%
rename(
"$b$" = "Estimate"
, "SE" = "Std. Error"
, "$df$" = "df"
, "$t$" = "t value"
, "$p$" = "Pr(>|t|)"
) %>%
mutate(
Effect = papaja:::prettify_terms(rownames(.))
) %>%
printnum(
digits = c(2, 2, 2, 2, 3, 0)
, gt1 = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
, zero = c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)
) %>%
select(Effect, `$b$`, `SE`, `$t$`, `$df$`, `$p$`) %>%
rename("betaval" = `$b$`)
sibgroup1.beta <- as.numeric(table.sibgroup.model.summary$betaval[2])
sibgroup1.beta <- abs(sibgroup1.beta*100)
sibgroup2.beta <- as.numeric(table.sibgroup.model.summary$betaval[3])
sibgroup2.beta <- abs(sibgroup2.beta*100)
sibgroup_wilcox_none_one <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "None")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
sibgroup_wilcox_one_two <- wilcox.test(
x = subset(SiblingsData, month == 18 & SibGroup6 == "2+")$Total.words
, y = subset(SiblingsData, month == 18 & SibGroup6 == "One")$Total.words
, paired = FALSE
)
par(cex = 1.2)
Figure.SibGroup
cap <- sprintf("Productive vocabulary acquisition over time. Colors denote sibling group; line with grey confidence band reflects local estimator (loess) fit over individual infants’ vocabulary at each month. Triangles indicate mean with bootstrapped CIs computed over each month's data. Points (jittered horizontally) show individual infants' vocabulary size at each month. Y-axis utilizes log-transformed vertical spacing for visual clarity.")
# age
age.test.input <- lmer(Log.n ~ month + (1|subj), data = subset(speaker.type, Speaker == "MOT"), REML=FALSE)
age.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT"), REML=FALSE)
age.test.input_anova <- anova(age.test.input, age.test.input.null) %>% # Strong effect for age - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for age
age.test.input_df <- age.test.input_anova$Df[2]
age.test.input_chisq <- age.test.input_anova$Chisq[2]
age.test.input_p.value <- age.test.input_anova$pval[2]
# sex
sex.test.input <- lmer(Log.n ~ sex + (1|subj), data = subset(speaker.type, Speaker == "MOT"), REML=FALSE)
sex.test.input.null <- lmer(Log.n ~ (1|subj), data = subset(speaker.type, Speaker == "MOT"), REML=FALSE)
sex.test.input_anova <- anova(sex.test.input, sex.test.input.null) %>% # Strong effect for sex - include in all further models
rename("pval" = `Pr(>Chisq)`)  # no effect for sex
sex.test.input_df <- sex.test.input_anova$`Chi Df`[2]
sex.test.input_chisq <- sex.test.input_anova$Chisq[2]
sex.test.input_p.value <- sex.test.input_anova$pval[2]
cor.edu.input <- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT")$MOTedulevel
, method = "spearman"
)
cor.vocab.input <- cor.test(
x = subset(SiblingsData, month == 17)$Total.words
, y = subset(speaker.type, month == 17 & Speaker == "MOT")$n
, method = "spearman"
)
cor.age.input<- cor.test(
x = subset(speaker.type, month == 17 & Speaker == "MOT")$n
, y = subset(speaker.type, month == 17 & Speaker == "MOT")$age_mom
, method = "spearman"
)
speaker.summary <-
speaker.type %>%
mutate(total.n = sum(n)) %>%
group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n)) %>%
mutate(PC.input = (total.speaker/total.n)*100)
mean.input.MOT <- speaker.type %>% filter(Speaker == "MOT") %>% summarise(mean.input = mean(n),  # 136.69
med.input = median(n),
sd.input = sd(n))      # 111.01
mean.input.FAT <- speaker.type %>% filter(Speaker == "FAT") %>% summarise(mean.input = mean(n),  # 18.14
med.input = median(n),
sd.input = sd(n))      # 42.01
mean.input.SIB <- speaker.type %>% filter(Speaker == "SIBLING" & SibGroup6 != "None") %>%
summarise(mean.input = mean(n),  # 13
med.input = median(n), # 6
sd.input = sd(n))      # 15.8
mean.input.all <- speaker.type %>%
group_by(SibGroup6) %>%
summarise(mean.input = mean(n),  # 53.9
med.input = median(n),
sd.input = sd(n))      # 90.6
cap = "Data summary of all three input variables and reported vocabulary size at 18 months."
kable(table.data.summary, "latex", booktabs = T, caption = cap, digits = 2, align = "c")  %>%
add_header_above(c(" " = 1, "No siblings" = 2, "1 sibling" = 2, "2+ siblings" = 2))
par(cex = 1.2)
Figure.speaker.count
cap <- sprintf("Mean number of words produced by Mothers, Fathers and Siblings across sessions recorded between 10-17 months. Circles represent values for individual infants; red triangles show group means.")
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + (1|subj), data=speaker.type, REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ (1|subj), data=speaker.type, REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
speaker.type_df <- speaker.type_anova$`Chi Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
speaker.type.mean <- speaker.type %>% group_by(subj) %>%
mutate(MeanN = mean(n))
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Total.input))
input.diff <-
speaker.type %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Family.input))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
library(papaja)
library(tidyverse)
library(dplyr)
library(tibble)
library(lmerTest)
library(afex)
library(citr)
library(feather)
source("DataGathering.R")
source("Tables.R")
stat_sum_df <- function(fun, geom="crossbar", ...) {
stat_summary(fun.data = fun, colour = "red", geom = geom, width = 0.2, ...)
}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
firstword <- CDI %>% group_by(subj) %>%
filter(Total.words > 0) %>%
summarise(firstword = min(month)) %>%
ungroup() %>%
mutate(firstword = as.numeric(firstword)) %>%
summarise(meanfirstword = mean(firstword),
sdfirstword = sd(firstword))
View(speaker.type)
View(speaker.type.n)
speaker.type.n %>% group_by(subj) %>%
mutate(other.speakers = All.speakers - Family.input)
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input) %>%
group_by(subj)
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
group_by(subj) %>%
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
group_by(subj)
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
group_by(subj) %>%
summarise(PC.other.m = mean(prop.other),
PC.other.sd = sd(prop.other))
speaker.type.n %>%
mutate(other.speakers = All.speakers - Family.input,
prop.other = other.speakers/All.speakers) %>%
summarise(PC.other.m = mean(prop.other),
PC.other.sd = sd(prop.other))
shapiro.test(SiblingsData$Total.words)
shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type.mean <- speaker.type %>% group_by(subj) %>%
mutate(MeanN = mean(n))
shapiro.test(speaker.type.mean$MeanN) # not normal
shapiro.test(in.cdi.summary$meanPC) # not normal
in.cdi.summary <- in.cdi %>% group_by(SibGroup6, subj) %>%
summarize(meanPC = mean(PC),
medPC = median(PC),
sdPC = sd(PC))
shapiro.test(in.cdi.summary$meanPC) # not normal
in.cdi.summary.n <- in.cdi %>% group_by(SibGroup6, subj) %>%
summarize(meann = mean(n),
medn = median(n),
sdn = sd(n))
shapiro.test(in.cdi.summary.n$meann) # normal
object.presence.summary <- object.presence %>%
group_by(subj, SibGroup6) %>%
summarise(mean.object = mean(PC),
sd.object = sd(PC),
med.object = median(PC))
shapiro.test(object.presence.summary$mean.object)
speaker.summary <-
speaker.type %>%
mutate(total.n = sum(n)) %>%
group_by(Speaker, total.n) %>%
summarise(total.speaker = sum(n)) %>%
mutate(PC.input = (total.speaker/total.n)*100)
View(speaker.summary)
#shapiro.test(speaker.type$n) # not normal
speaker.type.model <- lmerTest::lmer(Log.n ~ SibGroup6 + (1|subj), data=speaker.type, REML=FALSE)
speaker.type.model.null <- lmerTest::lmer(Log.n ~ (1|subj), data=speaker.type, REML=FALSE)
speaker.type_anova <- anova(speaker.type.model, speaker.type.model.null) %>%
rename("pval" = `Pr(>Chisq)`)
speaker.type_df <- speaker.type_anova$`Chi Df`[2]
speaker.type_chisq <- speaker.type_anova$Chisq[2]
speaker.type_p.value <- speaker.type_anova$pval[2]
# post hoc comparisons
speaker.type.mean <- speaker.type %>% group_by(subj) %>%
mutate(MeanN = mean(n))
#shapiro.test(speaker.type.mean$MeanN) # not normal
speaker.type_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "None")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One")$MeanN
, paired = FALSE
)
speaker.type_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.mean, SibGroup6 == "2+")$MeanN
, y = subset(speaker.type.mean, SibGroup6 == "One")$MeanN
, paired = FALSE
)
input.diff <-
speaker.type %>%
group_by(SibGroup6) %>%
summarise(meaninput = mean(Family.input))
noneonediff <- input.diff$meaninput[1] - input.diff$meaninput[2]
nonetwodiff <- input.diff$meaninput[1] - input.diff$meaninput[3]
onetwodiff <- input.diff$meaninput[2] - input.diff$meaninput[3]
speaker.type_df <- speaker.type_anova$`Df`[2]
speaker.type.FAT <- speaker.type %>% group_by(subj) %>%
filter(Speaker == "FAT") %>%
mutate(MeanN = mean(n))  %>%
filter(month == 17)
speaker.type.FAT_wilcox_none_one <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "None")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One")$MeanN
, paired = FALSE
) # NS
speaker.type.FAT_wilcox_one_two <- wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "2+")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One")$MeanN
, paired = FALSE
) # p<.001
wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "None")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One")$MeanN
, paired = FALSE
) # NS
wilcox.test(
x = subset(speaker.type.FAT, SibGroup6 == "2+")$MeanN
, y = subset(speaker.type.FAT, SibGroup6 == "One")$MeanN
, paired = FALSE
)
